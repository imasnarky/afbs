{"version":3,"sources":["const/const.js","components/Bullets/utils.js","components/Bullets/Bullet.js","components/Bullets/BulletComparator.js","components/Toolbars/Toolbars.js","static/abbrs.xlsx","components/Abbreviation/AbbreviationTable.js","components/Abbreviation/AbbreviationViewer.js","components/Toolbars/Thesaurus.js","const/defaults.js","BulletApp.js","highlightStateHolder.js","serviceWorker.js","index.js"],"names":["STATUS","Forms","all","AF707","fields","likelyWidth","AF1206","AF910","AF911","tokenize","sentence","split","renderBulletText","text","getWidth","width","match","console","error","fullWidth","trimEnd","textLines","lines","overflow","textSplit","answerIdx","i","length","slice","join","recursedText","warn","recursedResult","avgCharWidth","guessIndex","parseInt","firstGuessWidth","substring","Bullet","widthPx","enableOptim","height","onHighlight","canvasRef","useRef","useState","outputTextLines","setOutputTextLines","color","setColor","loading","setLoading","optimStatus","setOptimStatus","rendering","setBulletRendering","widthPxAdjusted","getTextWidth","txt","canvas","context","getContext","font","textAlign","measureText","useEffect","current","optimResults","evalFcn","largerSpace","optWords","initResults","status","seed","max","prevResults","finalResults","newSpace","finalOptimStatus","worstCaseResults","indexToReplace","Math","floor","abs","str","hash","charCodeAt","hashCode","splice","newResults","optimize","ref","style","visibility","position","top","left","minHeight","display","flexDirection","onMouseUp","map","line","whiteSpace","BulletComparator","editorState","setEditorState","onSelect","abbrReplacer","enableHighlight","onHighlightChange","bulletOutputID","Map","heightMap","setHeightMap","newHeightMap","getCurrentContent","getBlockMap","keys","key","blockDiv","document","querySelector","set","getBoundingClientRect","className","onChange","newEditorState","contentState","handleHighlightClick","e","yellowSpans","getElementsByClassName","log","target","span","innerText","outerText","background","handleStrategy","contentBlock","callback","duplicates","getText","forEach","word","matchAll","index","findWithRegex","userInput","filter","item","indexOf","findDuplicates","getPlainText","Set","Decorated","children","onClick","cursor","selectedText","getSelectionInfo","EditorState","decorator","CompositeDecorator","strategy","component","handleKeyCommand","command","newState","RichUtils","stripPastedStyles","spellCheck","autoCorrect","id","event","selection","window","getSelection","toString","onKeyDown","ctrlKey","keyCode","preventDefault","RegExp","range","createRange","selectNode","removeAllRanges","addRange","tabIndex","Array","from","DPI","get","selectionState","anchorKey","getAnchorKey","getBlockForKey","start","getStartOffset","end","getEndOffset","pdfjs","require","pdfjsWorker","GlobalWorkerOptions","workerSrc","ImportTools","props","importFile","fileInputRef","value","file","state","type","getDataFromPDF","getDataFromJSON","files","inputClick","importType","setState","click","filedata","pdfSetup","arrayBuffer","then","buffer","uint8Array","Uint8Array","getDocument","data","promise","getXFA","pdf","getFormName","getMetadata","result","info","Custom","getAllData","Promise","pullBullets","results","formName","datasetXML","replace","xmlDoc","DOMParser","parseFromString","bulletText","tagName","innerHTML","getPageInfo","templateXML","fonts","fontSizes","widths","bulletTag","getAttribute","fontSize","getBulletsFromPdf","textUpdater","onTextUpdate","widthUpdater","onWidthUpdate","bulletsHTML","pageData","parseFloat","bullets","documentElement","textContent","reader","FileReader","onload","JSON","parse","onJSONImport","readAsText","hoverOut","hovering","toggleMenu","createRef","menuState","this","aria-haspopup","aria-controls","icon","faAngleDown","role","onMouseLeave","href","PureComponent","OutputTools","widthAWD","widthEPR","widthOPR","min","step","onWidthChange","onOptimChange","handleEnableHighlight","InputTools","onTextNorm","SaveTools","onSave","settings","storedData","stringify","localStorage","setItem","err","name","alert","onExport","dataURI","encodeURIComponent","exportRef","download","Logo","ThesaurusTools","onHide","DocumentTools","aria-label","onThesaurusHide","tableSettings","columns","disableVisualSelection","stretchH","autoWrapRow","maxRows","Infinity","manualRowResize","manualColumnResize","rowHeaders","colHeaders","trimWhitespace","enterBeginsEditing","manualRowMove","manualColumnMove","columnSorting","indicator","autoColumnSize","minRows","contextMenu","licenseKey","AbbreviationTable","setData","tableRef","afterChange","payload","source","newData","hotInstance","getData","row","enabled","abbr","getDataFromXLS","workbook","XLSX","read","raw","rows","utils","sheet_to_json","Sheets","SheetNames","header","readAsBinaryString","AbbrToolbar","wb","book_new","sht","json_to_sheet","book_append_sheet","writeFile","exportToXLS","confirm","res","xhttp","XMLHttpRequest","responseType","response","open","SampleAbbrFile","send","AbbreviationViewer","handleCardClick","This","onSelReplace","SynonymViewer","getSynonyms","phrase","onreadystatechange","readyState","dat","responseText","synonyms","hidden","prevProps","mainBody","replacedWord","otherAbbrs","abbrDict","onMouseDown","faPlus","size","explanation","noResults","SynonymList","Synonym","mainAbbrDisp","fontWeight","enabledAbbrDisp","disabledAbbrDisp","enabledAbbrs","fontStyle","disabled","disabledAbbrs","defaultAbbrData","defaultEditorState","createWithContent","ContentState","createFromText","BulletApp","setEnableOptim","setWidth","abbrData","setAbbrData","setAbbrDict","setSelection","currentTab","setCurrentTab","showThesaurus","setShowThesaurus","handleJSONImport","settingsArray","isArray","fromJS","getItem","newAbbrDict","fullWord","String","push","useCallback","finalAbbrDict","Object","abbrs","allApprovedAbbrs","string","regExp","p1","p2","p3","handleThesaurusHide","tabContents","newSel","trim","newWidth","selectionsToReplace","block","regex","matchArr","exec","anchorOffset","focusOffset","SelectionState","createEmpty","merge","newContentState","reverse","Modifier","replaceText","newText","toJS","activeElement","trailingSpaces","newEnd","newSelectionState","newContent","newEditorStateSelect","forceSelection","tab","newTab","TopBulletApp","setEnableHighlight","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","WebFont","load","custom","families","ReactDOM","render","getElementById","xh","DONE","count","Count","incrementVisitors","URL","process","origin","addEventListener","fetch","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"kZAEaA,G,OACA,GADAA,EAEC,EAFDA,GAGD,EAHCA,GAIK,EAILC,EAAQ,CACnBC,IAAK,CACHC,MAAO,CACLC,OAAQ,CACN,kBACA,eACA,eACA,gBAEFC,YAAa,aAEfC,OAAQ,CACNF,OAAQ,CAAC,0BAA2B,6BACpCC,YAAa,aAEfE,MAAO,CACLH,OAAQ,CACN,YACA,cACA,aACA,YACA,eACA,cAEFC,YAAa,aAEfG,MAAO,CACLJ,OAAQ,CACN,YACA,cACA,aACA,cACA,eACA,cAEFC,YAAa,eCdNI,EAAW,SAACC,GACvB,OAAOA,EAASC,MAAM,UAoIXC,EAAmB,SAAnBA,EAAoBC,EAAMC,EAAUC,GAE3CF,EAAKG,MAAM,OACbC,QAAQC,MAAM,kDAGhB,IAAMC,EAAYL,EAASD,EAAKO,WAChC,GAAa,KAATP,EACF,MAAO,CACLQ,UAAW,GACXF,UAAW,EACXG,MAAO,EACPC,SAAU,EAAIR,GAGlB,GAAII,EAAYJ,EACd,MAAO,CACLM,UAAW,CAACR,GACZM,UAAWA,EACXG,MAAO,EACPC,SAAUJ,EAAYJ,GAQxB,IAAMS,EAAYX,EAAKF,MACrB,wDAMF,GAAIG,EAASU,EAAU,GAAGJ,WAAaL,EAAO,CAE5C,IADA,IAAIU,EAAY,EACPC,EAAI,EAAGA,GAAKF,EAAUG,OAAQD,IAAK,CAG1C,GADkBZ,EADDU,EAAUI,MAAM,EAAGF,GAAGG,KAAK,IAAIT,WAEhCL,EAAO,CACrBU,EAAYC,EAAI,EAChB,OAGJ,IAAMI,EAAeN,EAClBI,MAAMH,EAAWD,EAAUG,QAC3BE,KAAK,IAER,GAAIC,IAAiBjB,EAMnB,OALAI,QAAQc,KAAK,eAAiBlB,EAAO,uBAAwB,CAC3DA,OACAE,QACAI,cAEK,CACLE,UAAW,CAACR,GACZM,YACAG,MAAO,EACPC,SAAUJ,EAAYJ,GAGxB,IAAMiB,EAAiBpB,EAAiBkB,EAAchB,EAAUC,GAEhE,MAAO,CACLM,UAAU,CACRG,EAAUI,MAAM,EAAGH,GAAWI,KAAK,KAD5B,mBAEJG,EAAeX,YAEpBF,UAAWA,EACXG,MAAO,EAAIU,EAAeV,MAC1BC,SAAUJ,EAAYJ,GAM1B,IAAMkB,EAAed,EAAYN,EAAKc,OAChCO,EAAaC,SAASpB,EAAQkB,GAC9BG,EAAkBtB,EAASD,EAAKwB,UAAU,EAAGH,IAC/CT,EAAYS,EAChB,GAAIE,EAAkBrB,EACpB,IAAK,IAAIW,EAAIQ,EAAa,EAAGR,EAAI,EAAGA,IAAK,CAEvC,GADuBZ,EAASD,EAAKwB,UAAU,EAAGX,IAC7BX,EAAO,CAC1BU,EAAYC,EACZ,YAGC,GAAIU,EAAkBrB,EAC3B,IAAK,IAAIW,EAAIQ,EAAYR,GAAKb,EAAKc,OAAQD,IAAK,CAE9C,GADuBZ,EAASD,EAAKwB,UAAU,EAAGX,IAC7BX,EAAO,CAC1BU,EAAYC,EAAI,EAChB,OAIN,IAAMI,EAAejB,EAAKwB,UAAUZ,EAAWZ,EAAKc,QACpD,GAAIG,IAAiBjB,EAMnB,OALAI,QAAQc,KAAK,eAAiBlB,EAAO,uBAAwB,CAC3DA,OACAE,QACAI,cAEK,CACLE,UAAW,CAACR,GACZM,YACAG,MAAO,EACPC,SAAUJ,EAAYJ,GAGxB,IAAMiB,EAAiBpB,EAAiBkB,EAAchB,EAAUC,GAEhE,MAAO,CACLM,UAAU,CACRR,EAAKwB,UAAU,EAAGZ,IADX,mBAEJO,EAAeX,YAEpBF,UAAWA,EACXG,MAAO,EAAIU,EAAeV,MAC1BC,SAAUJ,EAAYJ,IC3KjBuB,MA9Gf,YAMI,IAAD,IALDzB,YAKC,MALM,GAKN,MAJD0B,eAIC,MAJS,IAIT,MAHDC,mBAGC,SAFDC,EAEC,EAFDA,OACAC,EACC,EADDA,YAEMC,EAAYC,iBAAO,MADxB,EAE6CC,oBAAS,iBAAM,CAAC,QAF7D,mBAEMC,EAFN,KAEuBC,EAFvB,OAIyBF,mBAAS,WAJlC,mBAIMG,EAJN,KAIaC,EAJb,OAK6BJ,oBAAS,GALtC,mBAKMK,EALN,KAKeC,EALf,OAMqCN,mBAAS7C,GAN9C,mBAMMoD,EANN,KAMmBC,EANnB,OAOuCR,mBAAS,CAAExB,UAAW,CAAC,MAP9D,mBAOMiC,EAPN,KAOiBC,EAPjB,KAQKC,EAAkBjB,EAAU,IAElC,SAASkB,EAAaC,EAAKC,GACzB,IAAMC,EAAUD,EAAOE,WAAW,MAGlC,OAFAD,EAAQE,KAAO,uBACfF,EAAQG,UAAY,OACbH,EAAQI,YAAYN,GAAK3C,MAyDlC,OApDAkD,qBAAU,WACRV,EACE3C,EACEC,GACA,SAAC6C,GAAD,OAASD,EAAaC,EAAKf,EAAUuB,WACrCV,MAGH,CAAC3C,EAAM2C,EAAiBhB,IAM3ByB,qBAAU,WAGR,GAFAd,GAAW,GACXJ,EAAmBO,EAAUjC,WACzBmB,EAAa,CACf,IAMM2B,EDJY,SAACzD,EAAU0D,GACjC,IACMC,EAAc,SAGhBC,EAAW7D,EAASC,EAASU,WAE3BmD,EAAcH,EAAQ1D,GAG5B,GAA6B,IAAzB6D,EAAYhD,SACd,MAAO,CACLiD,OAAQxE,EACRsD,UAAWiB,GAKf,IA3C2BE,EAAMC,EA2C7BC,EAAcJ,EACdK,EAAeL,EACbM,EAAWN,EAAYhD,UAAY,EAnBpB,SAmBuC8C,EAExDS,EAAmB9E,EAGjB+E,EAAmBX,EACvBE,EAAS,GAAK,IAAMA,EAAS1C,MAAM,GAAGC,KAAKgD,IAG7C,GA5BqB,WA6BlBA,GAA6BE,EAAiBxD,SAAW,GACzDsD,IAAaR,GACZU,EAAiBxD,SAAWvB,EAI9B,MAAO,CACLwE,OAAQxE,EACRsD,UAAWyB,GAIf,OAAa,CAGX,IAAIC,GAtEqBP,EAuEVH,EAASzC,KAAK,IAvEE6C,EAuEGJ,EAAS3C,OAAS,EAAI,EAtEnDsD,KAAKC,MACVD,KAAKE,IAAKF,KAAKC,MAAM,EApBD,SAACE,GACvB,IACE1D,EADE2D,EAAO,EAGX,GAAmB,IAAfD,EAAIzD,OAAc,OAAO0D,EAC7B,IAAK3D,EAAI,EAAGA,EAAI0D,EAAIzD,OAAQD,IAE1B2D,GAAQA,GAAQ,GAAKA,EADfD,EAAIE,WAAW5D,GAErB2D,GAAQ,EAEV,OAAOA,EAUoBE,CAASd,GAAQ,GAAK,IAAU,KACvDQ,KAAKC,MAAMR,IAoEgD,GAG7DJ,EAASkB,OACPR,EACA,EACAV,EAAS1C,MAAMoD,EAAgBA,EAAiB,GAAGnD,KAAKgD,IAI1D,IAGIY,EAAarB,EAHCE,EAASzC,KAAK,MAKhC,GAAIgD,IAAaR,GAAeoB,EAAWlE,SAAW,EAAG,CAEvDqD,EAAeD,EACfG,EAAmB9E,EACnB,MACK,GAjEY,WAiER6E,GAA6BY,EAAWlE,UAAY,EAAG,CAEhEqD,EAAea,EACfX,EAAmB9E,EACnB,MACK,GAAwB,IAApBsE,EAAS3C,OAAc,CAEhCiD,EAAea,EAKbX,EAHAD,IAAaR,GACbO,EAAarD,SAAWvB,EAELA,EAEAA,EAErB,MAGF2E,EAAcc,EAYhB,MAAO,CACLjB,OAAQM,EACRxB,UAAWsB,GC/FYc,CAAS7E,GANZ,SAAC6C,GAAD,OAChB9C,EACE8C,GACA,SAACA,GAAD,OAASD,EAAaC,EAAKf,EAAUuB,WACrCV,MAGJL,GAAW,GACXE,EAAec,EAAaK,QAC5BzB,EAAmBoB,EAAab,UAAUjC,gBAEtCiC,EAAU/B,SAAWvB,GAAwBsD,EAAU/B,SAAW,EACpE8B,EAAerD,GAEfqD,EAAerD,GAEjB+C,EAAmBO,EAAUjC,WAC7B8B,GAAW,KAEZ,CAACG,EAAWd,EAAa3B,EAAM2C,IAGlCS,qBAAU,WAENhB,EADEC,EACO,SACAE,IAAgBpD,EAChB,MAEA,WAEV,CAACkD,EAASJ,EAAiBM,IAK5B,qCACE,wBACEuC,IAAKhD,EACLiD,MAAO,CACLC,WAAY,SACZC,SAAU,WACVC,IAAK,UACLC,KAAM,aAGV,qBACEJ,MAAO,CACLK,UAAWxD,EACXO,MAAOA,EACPkD,QAAS,OACTC,cAAe,UAEjBC,UAAW1D,EAPb,SASGI,EAAgBuD,KAAI,SAACC,GACpB,OACE,sBAAiBV,MAAO,CAAEW,WAAY,OAAtC,SACGD,GADQA,YC7FR,SAASE,EAAT,GASX,IARFC,EAQC,EARDA,YACAC,EAOC,EAPDA,eACA3F,EAMC,EANDA,MACA4F,EAKC,EALDA,SACAC,EAIC,EAJDA,aACApE,EAGC,EAHDA,YACAqE,EAEC,EAFDA,gBACAC,EACC,EADDA,kBAEMC,EAAiB,eADtB,EAEiClE,mBAAS,IAAImE,KAF9C,mBAEMC,EAFN,KAEiBC,EAFjB,KAgID,OAZAjD,qBAAU,WACR,IADc,EACVkD,EAAe,IAAIH,IADT,cAEEP,EAAYW,oBAAoBC,cAAcC,QAFhD,IAEd,2BAAsE,CAAC,IAA9DC,EAA6D,QAC9DC,EAAWC,SAASC,cAAT,+BACSH,EADT,WAGbC,GACFL,EAAaQ,IAAIJ,EAAKC,EAASI,wBAAwBnF,SAP7C,8BASdyE,EAAaC,KACZ,CAACV,IAGF,sBAAKoB,UAAU,+BAAf,UACE,sBACEA,UAAU,SACVjC,MACE,GAHJ,UAQE,oBAAIiC,UAAU,WAAd,iCACA,qBAAKA,UAAU,SAASjC,MAAO,CAAE7E,MAAOA,EAAQ,EAAI,MAApD,SACE,cAAC,SAAD,CACE0F,YAAaA,EACbqB,SAhIO,SAACC,GAKhB,GAHsBtB,EAAYW,sBACZW,EAAeX,oBAEI,CACvC,IAAMY,EAAeD,EAAeX,oBACpC,IAAwB,IAApBP,EAA0B,CAAC,IAOpBoB,EAAT,SAA8BC,GAC5B,IAAIC,EAAcV,SAASW,uBAAuB,oBAClDnH,QAAQoH,IAAIF,GACZlH,QAAQoH,IAAIH,EAAEI,QAHiB,oBAIdH,GAJc,IAI/B,2BAA8B,CAAC,IAAtBI,EAAqB,QACxBL,EAAEI,OAAOE,WAAaD,EAAKE,YACA,UAAzBF,EAAK3C,MAAM8C,WACbH,EAAK3C,MAAM8C,WAAa,YAExBH,EAAK3C,MAAM8C,WAAa,WATC,gCA8BxBC,EAAT,SAAwBC,EAAcC,IAXtC,SAAuBC,EAAYF,EAAcC,GAC/C,IAAMhI,EAAO+H,EAAaG,UAE1BD,EAAWE,SAAQ,SAAAC,GACJ,YAAOpI,EAAKqI,SAASD,IAC1BD,SAAQ,SAAAhI,GAAK,OACnB6H,EAAS7H,EAAMmI,MAAOnI,EAAMmI,MAAQnI,EAAM,GAAGW,cAMjDyH,CAAcN,EAAYF,EAAcC,IAlCtCC,EADiB,SAAAO,GAAS,OAAIA,EAAUC,QAAO,SAACC,EAAMJ,GAAP,OAAkBE,EAAUG,QAAQD,KAAUJ,GAASI,EAAK5H,OAAS,KACvG8H,CAHAzB,EAAa0B,eACH/I,MAAM,eAGjCmI,EAAU,YAAO,IAAIa,IAAIb,IAiBzB,IAAMc,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,sBAAMhC,UAAW,mBAAoBiC,QAAS7B,EAAsBrC,MAAO,CAAE8C,WAAY,SAAUqB,OAAQ,WAA3G,SAAyHF,KA0BxHG,EAAiBC,EAAiBlC,GAAlCiC,aACJrD,GAA6B,KAAjBqD,GAAqBrD,EAASqD,GAE9CtD,EAAewD,cAAYvC,IAAII,EAAgB,CAACoC,UAVhD,IAAIC,qBAAmB,CACrB,CACEC,SAAU1B,EACV2B,UAAWV,YASV,CAAC,IAEEI,EAAiBC,EAAiBlC,GAAlCiC,aACJrD,GAA6B,KAAjBqD,GAAqBrD,EAASqD,GAE9CtD,EAAewD,cAAYvC,IAAII,EAAgB,CAACoC,UAAW,aAE1D,CACLzD,EAAeqB,GADV,IAEGiC,EAAiBC,EAAiBlC,GAAlCiC,aACJrD,GAA6B,KAAjBqD,GAAqBrD,EAASqD,KA0DxCO,iBA3Ie,SAACC,EAAS/D,GACjC,IAAMgE,EAAWC,YAAUH,iBAAiB9D,EAAa+D,GACzD,OAAIC,GACF/D,EAAe+D,GACR,WAEF,eAsICE,mBAAmB,EACnBC,YAAY,EACZC,YAAa,MACbhE,gBAAiBA,EACjBC,kBAAmBA,SAIzB,sBAAKe,UAAU,SAAf,UACE,oBAAIA,UAAU,WAAd,+BACA,qBACEA,UAAU,SACViD,GAAI/D,EACJnB,MAAO,CAAE7E,MAAOA,EAAQ,EAAI,MAC5BqF,UAhEe,SAAC2E,GACtB,IAAMC,EAAYC,OAAOC,eAAeC,WACtB,KAAdH,GACFrE,EAASqE,IA8DLI,UAzDR,SAAsBlD,GACpB,GAAIA,EAAEmD,SAAyB,KAAdnD,EAAEoD,UACjBpD,EAAEqD,iBAGErD,EAAEI,OAAOwC,GAAG9J,MAAM,IAAIwK,OAAOzE,KAAkB,CACjD,IAAM0E,EAAQhE,SAASiE,cACvBD,EAAME,WAAWzD,EAAEI,QACnB2C,OAAOC,eAAeU,kBACtBX,OAAOC,eAAeW,SAASJ,KAiD7BK,SAAS,IANX,SAQGC,MAAMC,KACLvF,EAAYW,oBAAoBC,eAChC,YAAmB,IAAD,mBAAhBE,EAAgB,KACZ1G,EADY,KACCkI,UAGjB,OAFInC,IAAc/F,EAAO+F,EAAa/F,IAGpC,cAAC,EAAD,CAEEA,KAAMA,EACN0B,QAvLL0J,mBAuLclL,EACT0B,OAAQwE,EAAUiF,IAAI3E,GACtB/E,YAAaA,GAJR+E,cAehB,IAAM0C,EAAmB,SAACxD,GAE/B,IAAM0F,EAAiB1F,EAAYyE,eAC7BkB,EAAYD,EAAeE,eAC3BzD,EAAenC,EAClBW,oBACAkF,eAAeF,GACZG,EAAQJ,EAAeK,iBACvBC,EAAMN,EAAeO,eACrB1C,EAAepB,EAAaG,UAAUnH,MAAM2K,EAAOE,GACzD,MAAO,CACLN,iBACAC,YACAxD,eACA2D,QACAE,MACAzC,iB,kDCvNE2C,EAAQC,EAAQ,KAChBC,EAAcD,EAAQ,KAC5BD,EAAMG,oBAAoBC,UAAYF,E,IAGhCG,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,WAAa,SAAChF,GACZ,GAAK,EAAKiF,aAAajJ,QAAQkJ,MAA/B,CAIE,IAAIvE,EAAW,SAACwE,GACdpM,QAAQoH,IAAIgF,IAEU,QAApB,EAAKC,MAAMC,KACb1E,EAAW,EAAK2E,eACa,SAApB,EAAKF,MAAMC,OACpB1E,EAAW,EAAK4E,iBAIlB5E,EAAS,EAAKsE,aAAajJ,QAAQwJ,MAAM,IACzC,EAAKP,aAAajJ,QAAQkJ,MAAQ,QAdlCnM,QAAQoH,IAAI,mBAXG,EA4BnBsF,WAAa,SAACC,GACZ,OAAO,WACL,EAAKC,SAAS,CACZN,KAAMK,IAER,EAAKT,aAAajJ,QAAQ4J,UAjCX,EAoCnBN,eAAiB,SAACH,GAAU,IAAD,EAsV7B,SAA2BU,GACzB,IAAMC,EAAWD,EAASE,cAAcC,MAAK,SAAUC,GACrD,IAAMC,EAAa,IAAIC,WAAWF,GAElC,OAAOxB,EAAM2B,YAAY,CAAEC,KAAMH,IAAcI,WAG3CC,EAAST,EAASE,MAAK,SAAUQ,GACrC,OAAOA,EAAID,YAGPE,EAAcX,EAASE,MAAK,SAAUQ,GAC1C,OAAOA,EAAIE,cAAcV,MAAK,SAAUW,GAGtC,OAFeA,EAAOC,KAAKC,OAAO,wBAElB,GADJF,EAAOC,KAAKC,OAAO,8BAI7BC,EAAaC,QAAQ/O,IAAI,CAACyO,EAAaF,IACvCS,EAAcF,EAAWd,MAAK,SAAUiB,GAC5C,IAAMC,EAAWD,EAAQ,GAGrBE,EAFYF,EAAQ,GAEA,SACxBE,EAAaA,EAAWC,QAAQ,SAAU,MAE1C,IAPqD,EAQ/CC,GADS,IAAIC,WACGC,gBAAgBJ,EAAY,YAE9CK,EAAa,GAVoC,cAWjCzP,EAAMC,IAAIkP,GAAV,QAXiC,IAWrD,2BAAmD,CAAC,IAA3CO,EAA0C,QAEjDD,GADkBH,EAAO7H,cAAciI,GACfC,UAAY,MAbe,8BAerD,OAAOF,KAGHG,EAAcb,EAAWd,MAAK,SAAUiB,GAC5C,IADqD,EAC/CC,EAAWD,EAAQ,GAGnBW,EAFUX,EAAQ,GAEG,SAErBI,GADS,IAAIC,WACGC,gBAAgBK,EAAa,YAE/CC,EAAQ,GACRC,EAAY,GACZC,EAAS,GACTvO,EAAI,EAX6C,cAYjCzB,EAAMC,IAAIkP,GAAV,QAZiC,IAYrD,2BAAmD,CAAC,IAA3CO,EAA0C,QAC3CO,EAAYX,EAAO7H,cAAc,eAAiBiI,EAAU,KAClEI,EAAMrO,GAAKwO,EAAUxI,cAAc,QAAQyI,aAAa,YACxDH,EAAUtO,GAAKwO,EAAUxI,cAAc,QAAQyI,aAAa,QAC5DF,EAAOvO,GAAKwO,EAAUC,aAAa,KACnCzO,GAAK,GAjB8C,8BAmBrD,cAAiBqO,EAAjB,eAAwB,CACtB,GADW,OACEA,EAAM,GAAI,CACrB9O,QAAQoH,IACN,6DAEF,OAGJ,cAAqB2H,EAArB,eAAgC,CAC9B,GADe,OACEA,EAAU,GAAI,CAC7B/O,QAAQoH,IACN,6DAEF,OAGJ,cAAkB4H,EAAlB,eAA0B,CACxB,GADY,OACEA,EAAO,GAAI,CACvBhP,QAAQoH,IAAI,yDACZ,OAIJ,MAAO,CAAEvE,KAAMiM,EAAM,GAAIK,SAAUJ,EAAU,GAAIjP,MAAOkP,EAAO,OAKjE,MAAO,CAAEf,cAAaW,eAzaiBQ,CAAkBhD,GAA/C6B,EADiB,EACjBA,YAAaW,EADI,EACJA,YAIfS,EAAc,EAAKrD,MAAMsD,aACzBC,EAAe,EAAKvD,MAAMwD,cAEhCxB,QAAQ/O,IAAI,CAACgP,EAAaW,IAAc3B,MAAK,YAA8B,IAAD,mBAA3BwC,EAA2B,KAAdC,EAAc,KACxEH,EAAaI,WAAWD,EAAS5P,OAAjCyP,GAGA,IAAMK,GAAU,IAAIrB,WAAYC,gBAAgBiB,EAAa,aAC1DI,gBAAgBC,YACnBT,EAAYO,EAAZP,OAlDe,EAqDnB7C,gBAAkB,SAACJ,GACjB,IAAM2D,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAChJ,GACf,IAAMqG,EAAO4C,KAAKC,MAAMlJ,EAAEI,OAAOuG,QAEjC,EAAK5B,MAAMoE,aAAa9C,IAE1ByC,EAAOM,WAAWjE,IA5DD,EA+DnBkE,SAAW,WACT,EAAK1D,SAAS,CAAE2D,UAAU,KAhET,EAkEnBC,WAAa,WACX,IAAMvN,EAAU,EAAKoJ,MAAMkE,SAC3B,EAAK3D,SAAS,CAAE2D,UAAWtN,KAlE3B,EAAKiJ,aAAeuE,sBACpB,EAAKpE,MAAQ,CACXC,KAAM,OACNiE,UAAU,GALK,E,qDAuEjB,IAAMG,EAAYC,KAAKtE,MAAMkE,SAAW,YAAc,GACtD,OACE,sBAAK3J,UAAW,YAAc8J,EAA9B,UACE,uBACEpE,KAAK,OACLzF,SAAU8J,KAAK1E,WACftH,MAAO,CAAEM,QAAS,QAClBP,IAAKiM,KAAKzE,eAEZ,qBAAKtF,UAAU,mBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,SAASiC,QAAS8H,KAAKjE,WAAW,OAApD,oBAGA,wBACE9F,UAAU,SACViC,QAAS8H,KAAKH,WACdI,gBAAc,OACdC,gBAAc,cAJhB,SAME,sBAAMjK,UAAU,OAAhB,SACE,cAAC,IAAD,CAAiBkK,KAAMC,eAK/B,qBACEnK,UAAU,gBACViD,GAAG,cACHmH,KAAK,OACLC,aAAcN,KAAKL,SAJrB,SAME,sBAAK1J,UAAU,mBAAf,UACE,mBACEsK,KAAK,KACLtK,UAAU,gBACViC,QAAS8H,KAAKjE,WAAW,OAH3B,iBAOA,mBACEwE,KAAK,KACLtK,UAAU,gBACViC,QAAS8H,KAAKjE,WAAW,QAH3B,8B,GAhHcyE,iBA8HpBC,E,kDACJ,WAAYpF,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,GAFI,E,qDAIT,IAAD,OACDgF,EAAW,QACXC,EAAW,QACXC,EAAW,QACjB,OACE,sBAAK3K,UAAU,mBAAf,UAEE,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEA,UAAU,QACViD,GAAG,aACHyC,KAAK,SACLkF,IAAI,MACJ/N,IAAI,MACJgO,KAAK,OACLtF,MAAOwE,KAAK3E,MAAMlM,MAClB+G,SAAU8J,KAAK3E,MAAM0F,gBAEvB,sBAAM9K,UAAU,gBAAhB,mBAEF,sBAAKA,UAAU,6BAAf,UACE,mBACEA,UACE,sBACC+J,KAAK3E,MAAMlM,QAAUuR,EAAW,GAAK,eAExCxI,QAAS8H,KAAK3E,MAAMwD,cAAc6B,GALpC,iBASA,mBACEzK,UACE,sBACC+J,KAAK3E,MAAMlM,QAAUwR,EAAW,GAAK,eAExCzI,QAAS8H,KAAK3E,MAAMwD,cAAc8B,GALpC,iBASA,mBACE1K,UACE,mBACC+J,KAAK3E,MAAMlM,QAAUyR,EAAW,GAAK,eAExC1I,QAAS8H,KAAK3E,MAAMwD,cAAc+B,GALpC,uBAYJ,mBACE3K,UACE,0BACC+J,KAAK3E,MAAMzK,YAAc,GAAK,eAEjCsH,QAAS8H,KAAK3E,MAAM2F,cACpB9H,GAAG,cANL,wBAUA,mBACEjD,UACE,0BACC+J,KAAK3E,MAAMpG,gBAAkB,GAAK,eAErCiD,QAAS,WAAO,EAAKmD,MAAMnG,oBAAqB,EAAKmG,MAAM4F,yBAC3D/H,GAAG,kBANL,yC,GAnEkBsH,iBAkFpBU,E,uKAEF,OACE,wBAAQjL,UAAU,SAASiC,QAAS8H,KAAK3E,MAAM8F,WAA/C,2C,GAHmBX,iBAUnBY,E,kDACJ,WAAY/F,GAAQ,IAAD,8BACjB,cAAMA,IAIRgG,OAAS,WACP,IAAMC,EAAW,EAAKjG,MAAMgG,SAEtBE,EAAahC,KAAKiC,UAAU,CAACF,IACnC,IACEG,aAAaC,QAAQ,kBAAmBH,GACxClS,QAAQoH,IACN,8DACE8K,EAAWxR,QAEf,MAAO4R,GACP,GAAiB,kBAAbA,EAAIC,KAKN,MAAMD,EAJNE,MACE,+GAlBW,EAyBnBC,SAAW,WACT,IAAMR,EAAW,EAAKjG,MAAMgG,SAEtBE,EAAahC,KAAKiC,UAAU,CAACF,IAC7BS,EACJ,uCAAyCC,mBAAmBT,GAC9D,EAAKU,UAAU3P,QAAQiO,KAAOwB,EAC9B,EAAKE,UAAU3P,QAAQ4J,QACvB7M,QAAQoH,IACN,6DACE8K,EAAWxR,SAnCE,EAsCnB4P,SAAW,WACT,EAAK1D,SAAS,CAAE2D,UAAU,KAvCT,EAyCnBC,WAAa,WACX,IAAMvN,EAAU,EAAKoJ,MAAMkE,SAC3B,EAAK3D,SAAS,CAAE2D,UAAWtN,KAzC3B,EAAK2P,UAAYnC,sBACjB,EAAKpE,MAAQ,CAAEkE,UAAU,GAHR,E,qDA8CjB,IAAMG,EAAYC,KAAKtE,MAAMkE,SAAW,YAAc,GACtD,OACE,sBAAK3J,UAAW,YAAc8J,EAA9B,UACE,qBAAK9J,UAAU,mBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,yBAAQA,UAAU,SAASiC,QAAS8H,KAAKqB,OAAzC,iBACO,OAEP,wBACEpL,UAAU,SACVgK,gBAAc,OACdC,gBAAc,YAHhB,SAKE,sBAAMjK,UAAU,OAAOiC,QAAS8H,KAAKH,WAArC,SACE,cAAC,IAAD,CAAiBM,KAAMC,eAK/B,qBACEnK,UAAU,gBACViD,GAAG,YACHmH,KAAK,OACLC,aAAcN,KAAKL,SAJrB,SAME,sBAAK1J,UAAU,mBAAf,UACE,mBAAGsK,KAAK,KAAKtK,UAAU,gBAAgBiC,QAAS8H,KAAKqB,OAArD,oBAGA,mBAAGd,KAAK,KAAKtK,UAAU,gBAAgBiC,QAAS8H,KAAK8B,SAArD,uBAMJ,mBACEvB,KAAK,KACLvM,MAAO,CAAEM,QAAS,QAClB4N,SAAS,gBACTnO,IAAKiM,KAAKiC,mB,GAtFIzB,iBA4FlB2B,E,uKAEF,OACE,qBAAIlM,UAAU,QAAd,UACE,sBAAMA,UAAU,OAAhB,iBACA,sBAAMA,UAAU,OAAhB,kBAFF,KAGE,sBAAMA,UAAU,OAAhB,iBAHF,UAIE,sBAAMA,UAAU,OAAhB,gBAJF,WAKE,sBAAMA,UAAU,OAAhB,gBALF,a,GAHauK,iBAab4B,E,uKAEF,OACE,oBACEnM,UAAU,SACViC,QAAS8H,KAAK3E,MAAMgH,OACpBpC,gBAAc,OACdC,gBAAc,iBAJhB,UAME,6CACA,sBAAMjK,UAAU,OAAhB,SACE,cAAC,IAAD,CAAiBkK,KAAMC,e,GAXJI,iBAiBvB8B,E,uKAEF,OACE,qBAAKrM,UAAU,SAASoK,KAAK,aAAakC,aAAW,kBAArD,SACE,sBAAKtM,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CAAWoL,OAAQrB,KAAK3E,MAAMgG,WAEhC,qBAAKpL,UAAU,cAAf,SACE,cAAC,EAAD,CACEwJ,aAAcO,KAAK3E,MAAMoE,aACzBd,aAAcqB,KAAK3E,MAAMsD,aACzBE,cAAemB,KAAK3E,MAAMwD,kBAG9B,qBAAK5I,UAAU,cAAf,SACE,cAAC,EAAD,CACErF,YAAaoP,KAAK3E,MAAMzK,YACxBoQ,cAAehB,KAAK3E,MAAM2F,cAC1B/L,gBAAiB+K,KAAK3E,MAAMpG,gBAC5BC,kBAAmB8K,KAAK3E,MAAMnG,kBAC9B+L,sBAAuBjB,KAAK3E,MAAM4F,sBAClC9R,MAAO6Q,KAAK3E,MAAMlM,MAClB4R,cAAef,KAAK3E,MAAM0F,cAC1BlC,cAAemB,KAAK3E,MAAMwD,kBAG9B,qBAAK5I,UAAU,cAAf,SACE,cAAC,EAAD,CAAYkL,WAAYnB,KAAK3E,MAAM8F,eAErC,qBAAKlL,UAAU,cAAf,SACE,cAAC,EAAD,CAAgBoM,OAAQrC,KAAK3E,MAAMmH,6B,GA/BnBhC,iB,+BC9Vb,MAA0B,mC,kBCInCiC,G,OAAgB,CACpBC,QAAS,CACP,CACE/F,KAAM,UACNhB,KAAM,WACNgH,wBAAwB,EACxBxT,MAAO,IAET,CACEwN,KAAM,QACNhB,KAAM,QAER,CACEgB,KAAM,OACNhB,KAAM,SAGViH,SAAU,MACVzT,MAAO,IACP0T,aAAa,EACbhS,OAAQ,IACRiS,QAASC,IACTC,iBAAiB,EACjBC,oBAAoB,EACpBC,YAAY,EACZC,WAAY,CAAC,UAAW,OAAQ,gBAChCC,gBAAgB,EAChBC,oBAAoB,EACpBC,eAAe,EACfC,kBAAkB,EAClBC,cAAe,CACbC,WAAW,GAEbC,gBAAgB,EAChBC,QAAS,GACTC,aAAa,EACbC,WAAY,kCAiCCC,MA9Bf,YAA+C,IAAlBnH,EAAiB,EAAjBA,KAAMoH,EAAW,EAAXA,QAC3BC,EAAWhT,iBAAO,MAmBxB,OACE,cAAC,IAAD,2BACMyR,GADN,IAEE9F,KAAMA,EACN5I,IAAKiQ,EACLC,YAtBW,SAACC,EAASC,GAGvB,GAAe,aAAXA,GAA8C,OAArBH,EAAS1R,QAAkB,CACtD,IACM8R,EADUJ,EAAS1R,QAAQ+R,YAAYC,UACrB7P,KAAI,SAAC8P,GAC3B,MAAO,CACLC,QAASD,EAAI,GACb/I,MAAO+I,EAAI,GACXE,KAAMF,EAAI,OAIdR,EAAQK,SC1CDM,EAAiB,SAACjJ,EAAMxE,GACnC,IAAMmI,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAChJ,GACf,IAAMqG,EAAOrG,EAAEI,OAAOuG,OAChB0H,EAAWC,IAAKC,KAAKlI,EAAM,CAC/BhB,KAAM,SACNmJ,KAAK,IAEDC,EAAOH,IAAKI,MACfC,cAAcN,EAASO,OAAOP,EAASQ,WAAW,IAAK,CACtDC,OAAQ,CAAC,UAAW,QAAS,UAE9B3Q,KAAI,YACH,MAAO,CAAE+P,QADwB,EAA3BA,QACYhJ,MADe,EAAlBA,MACUiJ,KADQ,EAAXA,SAMtBM,EAAK,GAAGP,QAAQjL,WAAWnK,MAAM,YACnC6H,EAAS8N,EAAK/U,MAAM,IAEpBiH,EAAS8N,IAGb3F,EAAOiG,mBAAmB5J,IAU5B,SAAS6J,EAAT,GAAmD,IAA5B3I,EAA2B,EAA3BA,KAAMoH,EAAqB,EAArBA,QACrBxI,GAD0C,kCAC3BuE,uBAYrB,OACE,sBAAK7J,UAAU,UAAf,UACE,uBACE0F,KAAK,OACLzF,SAdN,SAAqBI,GACdiF,EAAajJ,QAAQkJ,OAIxBkJ,EAAenJ,EAAajJ,QAAQwJ,MAAM,GAAIiI,GAC9CxI,EAAajJ,QAAQkJ,MAAQ,IAJ7BnM,QAAQoH,IAAI,mBAaV1C,IAAKwH,EACLvH,MAAO,CAAEM,QAAS,UAEpB,wBAAQ2B,UAAU,SAASiC,QAAS,kBAAMqD,EAAajJ,QAAQ4J,SAA/D,0BAGA,wBAAQjG,UAAU,SAASiC,QAAS,kBA/Bf,SAACyE,GAC1B,IAAM4I,EAAKX,IAAKI,MAAMQ,WAChBC,EAAMb,IAAKI,MAAMU,cAAc/I,GACrCiI,IAAKI,MAAMW,kBAAkBJ,EAAIE,EAAK,SACtCb,IAAKgB,UAAUL,EAAI,cA2B2BM,CAAYlJ,IAAtD,0BAGA,wBACE1G,UAAU,SACViC,QAAS,WA3EgB,IAACjB,EA6EtBoC,OAAOyM,QACL,2FA9EoB7O,EAiFJ,SAACwE,GAAD,OAAUiJ,EAAejJ,EAAMsI,IAhFpD,IAAI1G,SAAQ,SAAC0I,GAClB,IAAMC,EAAQ,IAAIC,eAClBD,EAAME,aAAe,OACrBF,EAAM1G,OAAS,WACbyG,EAAIC,EAAMG,WAEZH,EAAMI,KAAK,MAAOC,GAAgB,GAClCL,EAAMM,UACLhK,KAAKrF,KAgEJ,kCA2BSsP,MATf,YAAgD,IAAlB5J,EAAiB,EAAjBA,KAAMoH,EAAW,EAAXA,QAClC,OACE,gCACE,cAACuB,EAAD,CAAavB,QAASA,EAASpH,KAAMA,IACrC,cAAC,EAAD,CAAmBA,KAAMA,EAAMoH,QAASA,QChGxCyC,EAAkB,SAACnP,EAAMoP,GAC7B,OAAO,SAACnQ,GACNA,EAAEqD,iBACF8M,EAAKpL,MAAMqL,aAAarP,KAItBsP,E,kDACJ,WAAYtL,GAAQ,IAAD,8BACjB,cAAMA,IAMRuL,YAAc,SAACC,GACb,IAAMb,EAAQ,IAAIC,eAClBD,EAAMc,mBAAqB,WACzB,GAAyB,IAArBd,EAAMe,YAAqC,MAAjBf,EAAMpT,OAAgB,CAClD,IAAMoU,EAAMzH,KAAKC,MAAMwG,EAAMiB,cAEV,IAAfD,EAAIjX,OACN,EAAKkM,SAAS,CACZiL,SAAUF,EAAIvS,KAAI,SAACkD,GACjB,OAAOA,EAAKN,UAIhB,EAAK4E,SAAS,CACZiL,SAAU,OAMlBlB,EAAMI,KACJ,MACA,4CAA4DS,GAC5D,GAEFb,EAAMM,QA9BN,EAAK5K,MAAQ,CACXwL,SAAU,GACVC,QAAQ,GAJO,E,gEAmCjBnH,KAAK4G,YAAY5G,KAAK3E,MAAMhE,Q,yCAEX+P,GACbA,EAAU/P,OAAS2I,KAAK3E,MAAMhE,MAChC2I,KAAK4G,YAAY5G,KAAK3E,MAAMhE,Q,+BAK9B,IAuCIgQ,EAvCEC,EAAetH,KAAK3E,MAAMrG,aAAagL,KAAK3E,MAAMhE,MAClDkQ,EAAavH,KAAK3E,MAAMmM,SAASxH,KAAK3E,MAAMhE,MAC5C+N,EACJ,uBAAMnP,UAAU,gBAAhB,UACE,cAAC,EAAD,CACEoB,KAAM2I,KAAK3E,MAAMhE,KAEjBoN,KAAM6C,IAAiBtH,KAAK3E,MAAMhE,KAAO,GAAKiQ,EAC9CC,WAAYA,GAFPvH,KAAK3E,MAAMhE,MAIlB,mBACEpB,UAAU,gBACVwR,YAAajB,EAAgBxG,KAAK3E,MAAMhE,KAAM2I,MAFhD,SAIE,cAAC,IAAD,CAAiBG,KAAMuH,IAAQC,KAAK,KAAKvW,MAAM,iBAK/C8V,EACJ,cAAC,EAAD,CACER,aAAc1G,KAAK3E,MAAMqL,aAEzBQ,SAAUlH,KAAKtE,MAAMwL,SACrBM,SAAUxH,KAAK3E,MAAMmM,SACrBxS,aAAcgL,KAAK3E,MAAMrG,cAHpBgL,KAAKtE,MAAMwL,SAASjX,KAAK,KAM5B2X,EACJ,sBAAM3R,UAAU,cAAhB,+FAAkC,QAK9B4R,EACJ,sBAAM5R,UAAU,cAAhB,6BAAkC,QAapC,OAPEoR,EADsB,KAApBrH,KAAK3E,MAAMhE,KACFuQ,EAC6B,IAA/B5H,KAAKtE,MAAMwL,SAASnX,OAClB8X,EAEAX,EAIX,sBAAKjR,UAAU,OAAf,UACE,yBAAQA,UAAU,kDAAlB,UACE,sBAAKA,UAAU,oBAAf,UACE,6CAAgB+J,KAAK3E,MAAMhE,KAAO,IAAM,MACvC2I,KAAK3E,MAAMhE,KAAO+N,EAAS,MAE9B,mBAAGnP,UAAU,mBAAmBiC,QAAS8H,KAAK3E,MAAMgH,OAApD,SACE,sBAAMpM,UAAU,gBAGpB,qBACEA,UAAU,eACVjC,MAAO,CAAEnD,OAAQ,QAASlB,SAAU,QAFtC,SAIG0X,W,GA5GiB7G,iBAmHtBsH,E,4MACJtB,gBAAkB,SAACnP,GACjB,OAAO,SAACf,GACNA,EAAEqD,iBACF,EAAK0B,MAAMqL,aAAarP,K,uDAGlB,IAAD,OACP,OACE,8BACE,qBAAKpB,UAAU,mBAAf,SACG+J,KAAK3E,MAAM6L,SAASzS,KAAI,SAAC4C,EAAMvH,GAC9B,IAAMwX,EAAe,EAAKjM,MAAMrG,aAAaqC,GACvCkQ,EAAa,EAAKlM,MAAMmM,SAASnQ,GACvC,OACE,uBAAMpB,UAAU,MAAhB,UACE,cAAC,EAAD,CACEoB,KAAMA,EACNoN,KAAM6C,IAAiBjQ,EAAO,GAAKiQ,EACnCC,WAAYA,IAEd,mBAAGtR,UAAU,OAAOwR,YAAajB,EAAgBnP,EAAM,GAAvD,SACE,cAAC,IAAD,CAAiB8I,KAAMuH,IAAQC,KAAK,KAAKvW,MAAM,gBAPxBtB,c,GAff0Q,iBAgCpBuH,E,uKACM,IAAD,OAEHC,EAAe,GACfhI,KAAK3E,MAAMoJ,OACbuD,EACE,sBAAMhU,MAAO,CAAEiU,WAAY,QAA3B,SACG,KAAOjI,KAAK3E,MAAMoJ,KAAO,OAKhC,IAAIyD,EAAkB,GAClBC,EAAmB,GAEvB,GAAInI,KAAK3E,MAAMkM,WAAY,CACzB,GAAIvH,KAAK3E,MAAMkM,WAAW/C,QAAS,CACjC,IAAI4D,EAAepI,KAAK3E,MAAMkM,WAAW/C,QAAQ9M,QAAO,SAAC+M,GACvD,OAAOA,IAAS,EAAKpJ,MAAMoJ,QAEzB2D,EAAarY,OAAS,IACxBmY,EACE,sBAAMlU,MAAO,CAAEqU,UAAW,UAA1B,SACG,KAAOD,EAAanY,KAAK,KAAO,OAMzC,GAAI+P,KAAK3E,MAAMkM,WAAWe,SAAU,CAClC,IAAIC,EAAgBvI,KAAK3E,MAAMkM,WAAWe,SACtCC,EAAcxY,OAAS,IACzBoY,EACE,sBAAMnU,MAAO,CAAEqU,UAAW,UAA1B,SACG,KAAOE,EAActY,KAAK,KAAO,QAM5C,OACE,iCACE,+BAAO+P,KAAK3E,MAAMhE,OACjB2Q,EACAE,EACAC,S,GA7Ca3H,iBAkDPmG,IC1MF6B,EAAkB,CAC7B,CACEhE,SAAS,EACThJ,MAAO,gBACPiJ,KAAM,SAER,CACED,SAAS,EACThJ,MAAO,QACPiJ,KAAM,OAER,CACED,SAAS,EACThJ,MAAO,WACPiJ,KAAM,SAER,CACED,SAAS,EACThJ,MAAO,QACPiJ,KAAM,MAER,CACED,SAAS,EACThJ,MAAO,cACPiJ,KAAM,WClBJgE,EAAqBnQ,cAAYoQ,kBACrCC,eAAaC,eDZb,6bC+aaC,OA/Zf,YAA0D,IAAtC5T,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,kBAAoB,EACjBjE,oBAAS,GADQ,mBAChDL,EADgD,KACnCkY,EADmC,OAE7B7X,mBDdA,SCY6B,mBAEhD9B,EAFgD,KAEzC4Z,EAFyC,OAGvB9X,mBAASuX,GAHc,mBAGhDQ,EAHgD,KAGtCC,EAHsC,OAKvBhY,mBAAS,IALc,mBAKhDuW,EALgD,KAKtC0B,EALsC,OAOrBjY,mBAAS,IAPY,mBAOhDmI,EAPgD,KAOrC+P,EAPqC,OAQnBlY,mBAAS,GARU,mBAQhDmY,EARgD,KAQpCC,EARoC,OASbpY,oBAAS,GATI,mBAShDqY,EATgD,KASjCC,EATiC,OAUjBtY,mBAASwX,GAVQ,mBAUhD5T,EAVgD,KAUnCC,EAVmC,KAYvD,SAAS0U,EAAiBC,GAAgB,IAAD,IAkBhC,EAjBDnI,EAAWmI,EAAc,IAC/BX,EAAc,UAACxH,EAAS1Q,mBAAV,QAAyBA,GAGvCmY,EAAS/J,WAAU,UAACsC,EAASnS,aAAV,QAAmBA,IAGlCgL,MAAMuP,QAAQpI,EAAS0H,SAAS,KAClCC,EACE3H,EAAS0H,SAASvU,KAAI,SAAC8P,GACrB,MAAO,CACLC,QAASD,EAAI,GACb/I,MAAO+I,EAAI,GACXE,KAAMF,EAAI,QAKhB0E,EAAW,UAAC3H,EAAS0H,gBAAV,QAAsBA,GAGnClU,EACEwM,EAASzM,YACLyD,cAAYqR,OAAOrI,EAASzM,aAC5ByD,cAAYoQ,kBACVC,eAAaC,eAAetH,EAASrS,QAK/CoD,qBAAU,WAER,IACMoP,aAAamI,QAAQ,oBAEvBJ,EADgBjK,KAAKC,MAAMiC,aAAamI,QAAQ,qBAGlD,MAAOjI,GACP,GAAiB,kBAAbA,EAAIC,KAKN,MAAMD,EAJNtS,QAAQoH,IACN,yGAML,IAEHpE,qBAAU,WACR,IAAMwX,EAAc,GAEpBb,EACGtR,QAAO,SAAC6M,GAAD,OAAuB,OAAdA,EAAI/I,OAA+B,OAAb+I,EAAIE,QAC1CrN,SAAQ,SAACmN,GAER,IAAIuF,EAAWC,OAAOxF,EAAI/I,OAAOkC,QAAQ,MAAO,KAC5C+G,EAAOF,EAAIE,KACXD,EAAUD,EAAIC,QAClBqF,EAAYC,GAAYD,EAAYC,IAAa,GAE7CtF,GACFqF,EAAYC,GAAUtF,QAAUqF,EAAYC,GAAUtF,SAAW,GACjEqF,EAAYC,GAAUtF,QAAQwF,KAAKvF,KAEnCoF,EAAYC,GAAUxB,SAAWuB,EAAYC,GAAUxB,UAAY,GACnEuB,EAAYC,GAAUxB,SAAS0B,KAAKvF,OAI1CyE,EAAYW,KACX,CAACb,IAIJ,IAAMhU,EAAeiV,uBACnB,SAACnb,GACC,IAAMob,EAAgB,GAEtBC,OAAOzU,KAAK8R,GAAUpQ,SAAQ,SAACC,GAC7B,IAAM+S,EAAQ5C,EAASnQ,GAEnB+S,EAAM5F,UACR0F,EAAc7S,GAAQ+S,EAAM5F,QAAQ4F,EAAM5F,QAAQzU,OAAS,OAS/D,IACMsa,EAAmBF,OAAOzU,KAAKwU,GAClCzV,KANH,SAAsB6V,GACpB,OAAOA,EAAO5M,QAAQ,sBAAuB,WAM5CzN,KAAK,KAWFsa,EAAS,IAAI3Q,OACjB,eAAiByQ,EAAmB,eAftB,KA0BhB,OARoBvb,EAAS4O,QAAQ6M,GAAQ,SAACnb,EAAOob,EAAIC,EAAIC,GAE3D,IAAIjG,EAAOyF,EAAcO,GAIzB,OAHKhG,IACHA,EAAO,IAEF+F,EAAK/F,EAAOiG,OAIvB,CAAClD,IAOH,SAASvG,IAGP,IAAM7K,EAAevB,EAAYW,oBACjC,IAAwB,IAApBP,EAA2B,CAAC,IAOrBoB,EAAT,SAA8BC,GAC5B,IAD+B,EAC3BC,EAAcV,SAASW,uBAAuB,oBADnB,cAIdD,GAJc,IAI/B,2BAA8B,CAAC,IAAtBI,EAAqB,QACxBL,EAAEI,OAAOE,WAAaD,EAAKE,YACA,UAAzBF,EAAK3C,MAAM8C,WACbH,EAAK3C,MAAM8C,WAAa,YAExBH,EAAK3C,MAAM8C,WAAa,WATC,gCA8BxBC,EAAT,SAAwBC,EAAcC,IAXtC,SAAuBC,EAAYF,EAAcC,GAC/C,IAAMhI,EAAO+H,EAAaG,UAE1BD,EAAWE,SAAQ,SAAAC,GACJ,YAAOpI,EAAKqI,SAASD,IAC1BD,SAAQ,SAAAhI,GAAK,OACnB6H,EAAS7H,EAAMmI,MAAOnI,EAAMmI,MAAQnI,EAAM,GAAGW,cAMjDyH,CAAcN,EAAYF,EAAcC,IAlCtCC,EADiB,SAAAO,GAAS,OAAIA,EAAUC,QAAO,SAACC,EAAMJ,GAAP,OAAkBE,EAAUG,QAAQD,KAAUJ,GAASI,EAAK5H,OAAS,KACvG8H,CAHAzB,EAAa0B,eACH/I,MAAM,eAGjCmI,EAAU,YAAO,IAAIa,IAAIb,IAiBzB,IAAMc,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,sBAAMhC,UAAW,mBAAoBiC,QAAS7B,EAAsBrC,MAAO,CAAE8C,WAAY,SAAUqB,OAAQ,WAA3G,SAAyHF,KAyBlInD,EAAewD,cAAYvC,IAAIlB,EAAa,CAAC0D,UAN3C,IAAIC,qBAAmB,CACrB,CACEC,SAAU1B,EACV2B,UAAWV,aAKjBlD,EAAewD,cAAYvC,IAAIlB,EAAa,CAAC0D,UAAW,QA2D5D,SAASoS,IACPpB,GAAkBD,GAgGpB,IACMsB,GAAc,CAClB,cAAChW,EAAD,CACEC,YAAaA,EACbC,eAAgBA,EAChBE,aAAcA,EACd7F,MAAOA,EACP4F,SA9JJ,SAAsB8V,GAGE,KAAlBA,EAAOC,QACT3B,EAAata,EAASgc,EAAOC,QAAQ9a,MAAM,EAF5B,GAEyCC,KAAK,OA2J7DW,YAAaA,EACbqE,gBAAiBA,EACjBC,kBAAmBA,EACnB+L,sBAAuBA,IAEzB,cAAC,EAAD,CAAoBtE,KAAMqM,EAAUjF,QAASkF,KAG/C,OACE,qBAAKhT,UAAU,qBAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACErF,YAAaA,EACbqE,gBAAiBA,EACjB+L,cA9OV,WACE8H,GAAgBlY,IA8ORsE,kBAAmBA,EACnB+L,sBAAuBA,EACvB9R,MAAOA,EACP4R,cA3KV,SAA2BzK,GACzByS,EAAS/J,WAAW1I,EAAEI,OAAO8E,SA2KrBqD,cA7IV,SAA2BkM,GACzB,OAAO,kBAAMhC,EAASgC,KA6Id5J,WA1KV,WACE,IAAM6J,EAAsB,GACtB5U,EAAevB,EAAYW,oBACjCY,EAAaX,cAAc2B,SAAQ,SAAC6T,EAAOtV,IPLlB,SAACuV,EAAOlU,EAAcC,GAGjD,IAFA,IACIkU,EAAUxQ,EADR1L,EAAO+H,EAAaG,UAEe,QAAjCgU,EAAWD,EAAME,KAAKnc,KAG5BgI,EAFA0D,EAAQwQ,EAAS5T,MACXoD,EAAQwQ,EAAS,GAAGpb,QOCxByH,CAAc,OAAQyT,GAAO,SAACI,EAAcC,GAC1C,IAAMlS,EAAYmS,iBAAeC,YAAY7V,GAAK8V,MAAM,CACtDJ,eACAC,gBAEFN,EAAoBhB,KAAK5Q,SAI7B,IAAIsS,EAAkBtV,EAGtB4U,EAAoBW,UAAUvU,SAAQ,SAACgC,GACrCsS,EAAkBE,WAASC,YAAYH,EAAiBtS,EAAW,QAGrEtE,EAAewD,cAAYoQ,kBAAkBgD,KAuJrC/M,aArJV,SAA0BmN,GACxB,OAAO,kBACLhX,EACEwD,cAAYoQ,kBAAkBC,eAAaC,eAAekD,OAmJtDzK,OA7IV,WACE,MAAO,CACLlS,MAAOA,EACPF,KAAM4F,EAAYW,oBAAoBsC,aAAa,MACnDjD,YAAaA,EAAYkX,OACzB/C,SAAUA,EACVpY,YAAaA,IAwIP6O,aAAc+J,EACdhH,gBAAiBmI,OAIrB,qBAAK1U,UAAW,mBAAqBqT,EAAgB,GAAK,aAA1D,SACE,cAAC,EAAD,CACEjS,KAAM+B,EACNsN,aAvIV,SAA0BrP,GACxB,GAAIxB,SAASmW,cAAc/V,UAAU7G,MAAM,8BAA+B,CAAC,IAAD,EAMpEiJ,EAAiBxD,GAJnBuD,EAFsE,EAEtEA,aACAuC,EAHsE,EAGtEA,MACAH,EAJsE,EAItEA,UACAD,EALsE,EAKtEA,eAGI0R,EAAiB7T,EAAahJ,MAAM,QAAQ,GAC5C8c,EAASvR,EAAQtD,EAAKtH,OAASkc,EAAelc,OAE9Coc,EAAoBZ,iBAAeC,YAAYhR,GAAWiR,MAAM,CACpEJ,aAAc1Q,EACd2Q,YAAaY,IAGTE,EAAaR,WAASC,YAC1BhX,EAAYW,oBACZ+E,EACAlD,EAAO4U,GAEH9V,EAAiBmC,cAAY0R,KACjCnV,EACAuX,EACA,qBAEIC,EAAuB/T,cAAYgU,eACvCnW,EACAgW,GAGFrX,EAAeuX,GACf,IAAMjW,EAAeiW,EAAqB7W,oBAE1C,IAAwB,IAApBP,EAA0B,CAAC,IAOpBoB,EAAT,SAA8BC,GAC5B,IAD+B,EAC3BC,EAAcV,SAASW,uBAAuB,oBADnB,cAIdD,GAJc,IAI/B,2BAA8B,CAAC,IAAtBI,EAAqB,QACxBL,EAAEI,OAAOE,WAAaD,EAAKE,YACA,UAAzBF,EAAK3C,MAAM8C,WACbH,EAAK3C,MAAM8C,WAAa,YAExBH,EAAK3C,MAAM8C,WAAa,WATC,gCA8BxBC,EAAT,SAAwBC,EAAcC,IAXtC,SAAuBC,EAAYF,EAAcC,GAC/C,IAAMhI,EAAO+H,EAAaG,UAE1BD,EAAWE,SAAQ,SAAAC,GACJ,YAAOpI,EAAKqI,SAASD,IAC1BD,SAAQ,SAAAhI,GAAK,OACnB6H,EAAS7H,EAAMmI,MAAOnI,EAAMmI,MAAQnI,EAAM,GAAGW,cAMjDyH,CAAcN,EAAYF,EAAcC,IAlCtCC,EADiB,SAAAO,GAAS,OAAIA,EAAUC,QAAO,SAACC,EAAMJ,GAAP,OAAkBE,EAAUG,QAAQD,KAAUJ,GAASI,EAAK5H,OAAS,KACvG8H,CAHAzB,EAAa0B,eACH/I,MAAM,eAGjCmI,EAAU,YAAO,IAAIa,IAAIb,IAiBzB,IAAMc,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,sBAAMhC,UAAW,mBAAoBiC,QAAS7B,EAAsBrC,MAAO,CAAE8C,WAAY,SAAUqB,OAAQ,WAA3G,SAAyHF,KA0BhInD,EAAewD,cAAYvC,IAAIsW,EAAsB,CAAC9T,UAPtD,IAAIC,qBAAmB,CACrB,CACEC,SAAU1B,EACV2B,UAAWV,aAQflD,EAAewD,cAAYvC,IAAIsW,EAAsB,CAAC9T,UAAW,UAgD/DiP,SAAUA,EACVxS,aAAcA,EACdqN,OAAQsI,MAGZ,qBAAK1U,UAAU,iBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,6BAjDG,CAAC,UAAW,iBAkDPxB,KAAI,SAAC8X,EAAKzc,GACd,OACE,oBAAYmG,UAAWmT,IAAetZ,EAAI,YAAc,GAAxD,SACE,mBAAGoI,SAzJIsU,EAyJqB1c,EAxJrC,kBAAMuZ,EAAcmD,KAwJX,SAAiCD,KAD1Bzc,GAxJzB,IAAyB0c,WAgKnB,qBAAKvW,UAAU,iBAAf,SAAiC2U,GAAYxB,WCtatC,SAASqD,KAAgB,IAAD,EACWxb,oBAAS,GADpB,mBAC5BgE,EAD4B,KACXyX,EADW,KAMnC,OAAO,cAAC,GAAD,CAAWzX,gBAAiBA,EAAiBC,kBAJpD,WACIwX,GAAoBzX,GACpB5F,QAAQoH,IAAI,oC,WCIdkW,GAAcC,QACW,cAA7BvT,OAAOwT,SAASC,UAEe,UAA7BzT,OAAOwT,SAASC,UAEhBzT,OAAOwT,SAASC,SAAS1d,MACvB,2DAsCN,SAAS2d,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT1Q,MAAK,SAAA+Q,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7R,QACfwR,UAAUC,cAAcO,YAI1Bre,QAAQoH,IACN,iHAKEwW,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBhe,QAAQoH,IAAI,sCAGRwW,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAAve,GACLD,QAAQC,MAAM,4CAA6CA,M,sBCjFjEwe,EAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,iBAOfC,IAASC,OACP,qCACE,qBAAKlY,UAAU,UAAUiD,GAAG,QAA5B,SACE,cAACuT,GAAD,MAEF,sBAAKxW,UAAU,YAAYiD,GAAG,SAA9B,UACE,mEACO,mBAAGqH,KAAK,+CAAR,mBADP,QAES,mBAAGA,KAAK,8CAAR,6BAET,uKACA,sHAAwF,mBAAGA,KAAK,qDAAR,kBAAxF,kBACA,0EAGF1K,SAASuY,eAAe,SAS5B,WAEE,IAAMC,EAAK,IAAIpI,eACfoI,EAAGvH,mBAAqB,WACtB,GAAIuH,EAAGtH,aAAed,eAAeqI,KAAM,CACzC,IAAI1b,EAASyb,EAAGzb,OAGhB,GAAKA,GAAU,KAAOA,EAAS,IAAM,CAEnC,IAAM2b,EAAQhP,KAAKC,MAAM6O,EAAGlI,UAAUqI,MACtCnf,QAAQoH,IAAI,yCAA2C8X,EAAQ,mCAG/Dlf,QAAQoH,IAAI,uDAIlB4X,EAAGjI,KAAK,OAAQ,8EAA8E,GAC9FiI,EAAG/H,OA1BLmI,GDnBO,SAAkBxB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIwB,IAAIC,yCAAwBtV,OAAOwT,SAAStM,MACpDqO,SAAWvV,OAAOwT,SAAS+B,OAIvC,OAGFvV,OAAOwV,iBAAiB,QAAQ,WAC9B,IAAM7B,EAAK,UAAM2B,yCAAN,sBAEPhC,KAgEV,SAAiCK,EAAOC,GAEtC6B,MAAM9B,EAAO,CACX+B,QAAS,CAAE,iBAAkB,YAE5BzS,MAAK,SAAA6J,GAEJ,IAAM6I,EAAc7I,EAAS4I,QAAQzU,IAAI,gBAEnB,MAApB6L,EAASvT,QACO,MAAfoc,IAA8D,IAAvCA,EAAYpX,QAAQ,cAG5CsV,UAAUC,cAAc8B,MAAM3S,MAAK,SAAA+Q,GACjCA,EAAa6B,aAAa5S,MAAK,WAC7BjD,OAAOwT,SAASsC,eAKpBpC,GAAgBC,EAAOC,MAG1BY,OAAM,WACLxe,QAAQoH,IACN,oEAvFA2Y,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM3S,MAAK,WACjCjN,QAAQoH,IACN,iHAMJsW,GAAgBC,EAAOC,OCJ/BE,K","file":"static/js/main.b8244bc6.chunk.js","sourcesContent":["// optimization status codes\n// status codes for optimization direction\nexport const STATUS = {\n  OPTIMIZED: 0,\n  FAILED_OPT: 1,\n  NOT_OPT: -1,\n  MAX_UNDERFLOW: -4,\n};\n\n// could not do a static class property because of MS edge\nexport const Forms = {\n  all: {\n    AF707: {\n      fields: [\n        \"S2DutyTitleDesc\",\n        \"S4Assessment\",\n        \"S5Assessment\",\n        \"S6Assessment\",\n      ],\n      likelyWidth: \"201.041mm\",\n    },\n    AF1206: {\n      fields: [\"specificAccomplishments\", \"p2SpecificAccomplishments\"],\n      likelyWidth: \"202.321mm\",\n    },\n    AF910: {\n      fields: [\n        \"KeyDuties\",\n        \"IIIComments\",\n        \"IVComments\",\n        \"VComments\",\n        \"VIIIComments\",\n        \"IXComments\",\n      ],\n      likelyWidth: \"202.321mm\",\n    },\n    AF911: {\n      fields: [\n        \"KeyDuties\",\n        \"IIIComments\",\n        \"IVComments\",\n        \"VIIComments\",\n        \"VIIIComments\",\n        \"IXComments\",\n      ],\n      likelyWidth: \"202.321mm\",\n    },\n  },\n};\n","import { STATUS } from \"../../const/const\";\n\n/* \nstr: string\nreturn: number\n*/\nexport const hashCode = (str) => {\n  let hash = 0,\n    i,\n    chr;\n  if (str.length === 0) return hash;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n\n/*\nseed: string\nmax: number\nreturn: number\n*/\nexport const getRandomInt = (seed, max) => {\n  return Math.floor(\n    Math.abs((Math.floor(9 * hashCode(seed) + 5) % 100000) / 100000) *\n      Math.floor(max)\n  );\n};\n\nexport const tokenize = (sentence) => {\n  return sentence.split(/[\\s]+/);\n};\n\n/*\nsentence: string\nevalFcn: string to \n        results: {\n            textLines: string,\n            fullWidth: number,\n            lines: number,\n            overflow: number,\n        };\nreturn: {\n    status: STATUS\n    rendering: results\n}\n*/\nexport const optimize = (sentence, evalFcn) => {\n  const smallerSpace = \"\\u2006\";\n  const largerSpace = \"\\u2004\";\n\n  //initialization of optimized words array\n  let optWords = tokenize(sentence.trimEnd());\n\n  const initResults = evalFcn(sentence);\n\n  // Sentence is fine, don't need to optimize\n  if (initResults.overflow === 0) {\n    return {\n      status: STATUS.OPTIMIZED,\n      rendering: initResults,\n    };\n  }\n\n  //initial instantiation of previousResults\n  let prevResults = initResults;\n  let finalResults = initResults;\n  const newSpace = initResults.overflow >= 0 ? smallerSpace : largerSpace;\n\n  let finalOptimStatus = STATUS.NOT_OPT;\n\n  // like in the while loop, want to not replace the first space after the dash.\n  const worstCaseResults = evalFcn(\n    optWords[0] + \" \" + optWords.slice(1).join(newSpace)\n  );\n\n  if (\n    (newSpace === smallerSpace && worstCaseResults.overflow > 0) ||\n    (newSpace === largerSpace &&\n      worstCaseResults.overflow < STATUS.MAX_UNDERFLOW)\n  ) {\n    // this means that there is no point in trying to optimize.\n\n    return {\n      status: STATUS.FAILED_OPT,\n      rendering: worstCaseResults,\n    };\n  }\n\n  while (true) {\n    //don't select the first space after the dash- that would be noticeable and look wierd.\n    // also don't select the last word, don't want to add a space after that.\n    let indexToReplace =\n      getRandomInt(optWords.join(\"\"), optWords.length - 1 - 1) + 1;\n\n    //merges two elements together, joined by the space\n    optWords.splice(\n      indexToReplace,\n      2,\n      optWords.slice(indexToReplace, indexToReplace + 2).join(newSpace)\n    );\n\n    //make all other spaces the normal space size\n    let newSentence = optWords.join(\" \");\n\n    //console.log(newSentence.split(' '))\n    let newResults = evalFcn(newSentence);\n\n    if (newSpace === largerSpace && newResults.overflow > 0) {\n      //console.log(\"Note: Can't add more spaces without overflow, reverting to previous\" );\n      finalResults = prevResults;\n      finalOptimStatus = STATUS.OPTIMIZED;\n      break;\n    } else if (newSpace === smallerSpace && newResults.overflow <= 0) {\n      //console.log(\"Removed enough spaces. Terminating.\" );\n      finalResults = newResults;\n      finalOptimStatus = STATUS.OPTIMIZED;\n      break;\n    } else if (optWords.length === 2) {\n      // no more optimization could be done.\n      finalResults = newResults;\n      if (\n        newSpace === largerSpace &&\n        finalResults.overflow > STATUS.MAX_UNDERFLOW\n      ) {\n        finalOptimStatus = STATUS.OPTIMIZED;\n      } else {\n        finalOptimStatus = STATUS.FAILED_OPT;\n      }\n      break;\n    }\n\n    prevResults = newResults;\n  }\n\n  /*   console.log({\n    sentence,\n    optWords,\n    initResults,\n    finalResults,\n    worstCaseResults,\n    finalOptimStatus,\n  }); */\n\n  return {\n    status: finalOptimStatus,\n    rendering: finalResults,\n  };\n};\n\n/*\ntext: string\ngetWidth: function: string to number\nwidth: string\nreturn: results: {\n            textLines: string,\n            fullWidth: number,\n            lines: number,\n            overflow: number,\n        };\n*/\n// all widths in this function are in pixels\nexport const renderBulletText = (text, getWidth, width) => {\n  // this function expects a single line of text with no line breaks.\n  if (text.match(\"\\n\")) {\n    console.error(\"renderBulletText expects a single line of text\");\n  }\n\n  const fullWidth = getWidth(text.trimEnd());\n  if (text === \"\") {\n    return {\n      textLines: [],\n      fullWidth: 0,\n      lines: 0,\n      overflow: 0 - width,\n    };\n  }\n  if (fullWidth < width) {\n    return {\n      textLines: [text],\n      fullWidth: fullWidth,\n      lines: 1,\n      overflow: fullWidth - width,\n    };\n  } else {\n    // Scenario where the width of the text is wider than desired.\n    //  In this case, work needs to be done to figure out where the line breaks should be.\n\n    // Regex- split after one of the following: \\u2004 \\u2009 \\u2006 \\s ? / | - % !\n    // but ONLY if immediately followed by: [a-zA-z] [0-9] + \\\n    const textSplit = text.split(\n      /(?<=[\\u2004\\u2009\\u2006\\s?/|\\-%!])(?=[a-zA-Z0-9+\\\\])/\n    );\n\n    // check to make sure the first token is smaller than the desired width.\n    //   This is usually true, unless the desired width is abnormally small, or the\n    //   input text is one really long word\n    if (getWidth(textSplit[0].trimEnd()) < width) {\n      let answerIdx = 0;\n      for (let i = 1; i <= textSplit.length; i++) {\n        const evalText = textSplit.slice(0, i).join(\"\").trimEnd();\n        const evalWidth = getWidth(evalText);\n        if (evalWidth > width) {\n          answerIdx = i - 1;\n          break;\n        }\n      }\n      const recursedText = textSplit\n        .slice(answerIdx, textSplit.length)\n        .join(\"\");\n\n      if (recursedText === text) {\n        console.warn(\"Can't fit \\\"\" + text + '\" on a single line\\n', {\n          text,\n          width,\n          fullWidth,\n        });\n        return {\n          textLines: [text],\n          fullWidth,\n          lines: 1,\n          overflow: fullWidth - width,\n        };\n      } else {\n        const recursedResult = renderBulletText(recursedText, getWidth, width);\n\n        return {\n          textLines: [\n            textSplit.slice(0, answerIdx).join(\"\"),\n            ...recursedResult.textLines,\n          ],\n          fullWidth: fullWidth,\n          lines: 1 + recursedResult.lines,\n          overflow: fullWidth - width,\n        };\n      }\n    } else {\n      // if the first token is wider than the desired width, a line break will need to be inserted somewhere in the token.\n      // Using binary search (I think) to find the correct spot for the line break.\n      const avgCharWidth = fullWidth / text.length;\n      const guessIndex = parseInt(width / avgCharWidth);\n      const firstGuessWidth = getWidth(text.substring(0, guessIndex));\n      let answerIdx = guessIndex;\n      if (firstGuessWidth > width) {\n        for (let i = guessIndex - 1; i > 0; i--) {\n          const nextGuessWidth = getWidth(text.substring(0, i));\n          if (nextGuessWidth < width) {\n            answerIdx = i;\n            break;\n          }\n        }\n      } else if (firstGuessWidth < width) {\n        for (let i = guessIndex; i <= text.length; i++) {\n          const nextGuessWidth = getWidth(text.substring(0, i));\n          if (nextGuessWidth > width) {\n            answerIdx = i - 1;\n            break;\n          }\n        }\n      }\n      const recursedText = text.substring(answerIdx, text.length);\n      if (recursedText === text) {\n        console.warn(\"Can't fit \\\"\" + text + '\" on a single line\\n', {\n          text,\n          width,\n          fullWidth,\n        });\n        return {\n          textLines: [text],\n          fullWidth,\n          lines: 1,\n          overflow: fullWidth - width,\n        };\n      } else {\n        const recursedResult = renderBulletText(recursedText, getWidth, width);\n\n        return {\n          textLines: [\n            text.substring(0, answerIdx),\n            ...recursedResult.textLines,\n          ],\n          fullWidth: fullWidth,\n          lines: 1 + recursedResult.lines,\n          overflow: fullWidth - width,\n        };\n      }\n    }\n  }\n};\n","import { useRef, useState, useEffect } from \"react\";\nimport { optimize, renderBulletText } from \"./utils\";\nimport { STATUS } from \"../../const/const\";\n\nfunction Bullet({\n  text = \"\",\n  widthPx = 500,\n  enableOptim = false,\n  height,\n  onHighlight,\n}) {\n  const canvasRef = useRef(null);\n  const [outputTextLines, setOutputTextLines] = useState(() => [\" \"]);\n\n  const [color, setColor] = useState(\"inherit\");\n  const [loading, setLoading] = useState(false);\n  const [optimStatus, setOptimStatus] = useState(STATUS.NOT_OPT);\n  const [rendering, setBulletRendering] = useState({ textLines: [\"\"] });\n  const widthPxAdjusted = widthPx + 0.55;\n\n  function getTextWidth(txt, canvas) {\n    const context = canvas.getContext(\"2d\");\n    context.font = \"12pt Times New Roman\";\n    context.textAlign = \"left\";\n    return context.measureText(txt).width;\n  }\n\n  // This effect updates the text rendering (i.e. enforces width constraints by inserting newlines)\n  //   whenever the props text input is updated.\n  useEffect(() => {\n    setBulletRendering(\n      renderBulletText(\n        text,\n        (txt) => getTextWidth(txt, canvasRef.current),\n        widthPxAdjusted\n      )\n    );\n  }, [text, widthPxAdjusted, enableOptim]);\n  // [] indicates that this happens once after the component mounts.\n  // [text] indicates that this happens every time the text changes from the user (from props)\n\n  // This effect happens after bullet rendering changes. It evaluates the rendered bullet and\n  //  sees how it can be improved with modified spaces.\n  useEffect(() => {\n    setLoading(true);\n    setOutputTextLines(rendering.textLines);\n    if (enableOptim) {\n      const optimizer = (txt) =>\n        renderBulletText(\n          txt,\n          (txt) => getTextWidth(txt, canvasRef.current),\n          widthPxAdjusted\n        );\n      const optimResults = optimize(text, optimizer);\n      setLoading(false);\n      setOptimStatus(optimResults.status);\n      setOutputTextLines(optimResults.rendering.textLines);\n    } else {\n      if (rendering.overflow < STATUS.MAX_UNDERFLOW || rendering.overflow > 0) {\n        setOptimStatus(STATUS.FAILED_OPT);\n      } else {\n        setOptimStatus(STATUS.OPTIMIZED);\n      }\n      setOutputTextLines(rendering.textLines);\n      setLoading(false);\n    }\n  }, [rendering, enableOptim, text, widthPxAdjusted]);\n\n  //color effect\n  useEffect(() => {\n    if (loading) {\n      setColor(\"silver\");\n    } else if (optimStatus === STATUS.FAILED_OPT) {\n      setColor(\"red\");\n    } else {\n      setColor(\"black\");\n    }\n  }, [loading, outputTextLines, optimStatus]);\n\n  // the style properties help lock the canvas in the same spot and make it essentially invisible.\n  //whitespace: pre-wrap is essential as it allows javascript string line breaks to appear properly.\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        style={{\n          visibility: \"hidden\",\n          position: \"absolute\",\n          top: \"-1000px\",\n          left: \"-1000px\",\n        }}\n      />\n      <div\n        style={{\n          minHeight: height,\n          color: color,\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n        onMouseUp={onHighlight}\n      >\n        {outputTextLines.map((line) => {\n          return (\n            <span key={line} style={{ whiteSpace: \"pre\" }}>\n              {line}\n            </span>\n          );\n        })}\n      </div>\n    </>\n  );\n  //return canvas;\n}\n\nexport default Bullet;\n","import { useState, useEffect } from \"react\";\nimport { Editor, RichUtils, CompositeDecorator, EditorState } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport Bullet from \"./Bullet\";\n\n\nconst DPI = 96;\nconst MM_PER_IN = 25.4;\nconst DPMM = DPI / MM_PER_IN;\n\nexport default function BulletComparator({\n  editorState,\n  setEditorState,\n  width,\n  onSelect,\n  abbrReplacer,\n  enableOptim,\n  enableHighlight,\n  onHighlightChange,\n}) {\n  const bulletOutputID = \"bulletOutput\";\n  const [heightMap, setHeightMap] = useState(new Map());\n  // Editor callback that adds rich text editor keybinds\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n\n  // Editor callback that runs whenever edits or selection changes occur.\n  const onChange = (newEditorState) => {\n\n    let oldContentState = editorState.getCurrentContent();\n    let newContentState = newEditorState.getCurrentContent();\n\n    if (oldContentState !== newContentState) {\n      const contentState = newEditorState.getCurrentContent();\n      if (enableHighlight === true) {\n        let bulletText = contentState.getPlainText();\n        let userInput = bulletText.split(/\\s|;|--|\\//);\n        let findDuplicates = userInput => userInput.filter((item, index) => (userInput.indexOf(item) !== index && item.length > 1));\n        let duplicates = findDuplicates(userInput);\n        duplicates = [...new Set(duplicates)];\n      \n        function handleHighlightClick(e) {\n          let yellowSpans = document.getElementsByClassName('yellow-highlight');\n          console.log(yellowSpans);\n          console.log(e.target);\n          for (let span of yellowSpans) {\n            if (e.target.innerText == span.outerText) {\n              if (span.style.background == 'yellow') {\n                span.style.background = 'LawnGreen';\n              } else {\n                span.style.background = 'yellow';\n              }\n            }\n          }\n        }\n  \n        const Decorated = ( {children} ) => {\n          return <span className={\"yellow-highlight\"} onClick={handleHighlightClick} style={{ background: \"yellow\", cursor: \"pointer\" }}>{children}</span>;\n        };\n  \n        function findWithRegex(duplicates, contentBlock, callback) {\n          const text = contentBlock.getText();\n        \n          duplicates.forEach(word => {\n            const matches = [...text.matchAll(word)];\n            matches.forEach(match =>\n              callback(match.index, match.index + match[0].length)\n            );\n          });\n        }\n  \n        function handleStrategy(contentBlock, callback) {\n          findWithRegex(duplicates, contentBlock, callback);\n        }\n  \n        const createDecorator = () =>\n          new CompositeDecorator([\n            {\n              strategy: handleStrategy,\n              component: Decorated\n            }\n          ]);\n  \n          const { selectedText } = getSelectionInfo(newEditorState);\n          if (onSelect && selectedText !== \"\") onSelect(selectedText);\n  \n          setEditorState(EditorState.set(newEditorState, {decorator: createDecorator()}));\n          \n        } else {\n  \n          const { selectedText } = getSelectionInfo(newEditorState);\n          if (onSelect && selectedText !== \"\") onSelect(selectedText);\n          \n          setEditorState(EditorState.set(newEditorState, {decorator: null})); \n        }\n    } else {\n      setEditorState(newEditorState);\n      const { selectedText } = getSelectionInfo(newEditorState);\n      if (onSelect && selectedText !== \"\") onSelect(selectedText);\n    }\n\n\n \n\n  };\n\n  // This other bullet selection is for when things are selected on the optimized output\n  const onBulletSelect = (event) => {\n    const selection = window.getSelection().toString();\n    if (selection !== \"\") {\n      onSelect(selection);\n    }\n  };\n\n  // control-a selectability on bullet outputs\n  function selectOutput(e) {\n    if (e.ctrlKey && e.keyCode === 65) {\n      e.preventDefault();\n      //console.log('control-a')\n      //console.log(this.outputRef.current)\n      if (e.target.id.match(new RegExp(bulletOutputID))) {\n        const range = document.createRange();\n        range.selectNode(e.target);\n        window.getSelection().removeAllRanges();\n        window.getSelection().addRange(range);\n      }\n    }\n  }\n\n  useEffect(() => {\n    let newHeightMap = new Map();\n    for (let key of editorState.getCurrentContent().getBlockMap().keys()) {\n      const blockDiv = document.querySelector(\n        `div[data-offset-key=\"${key}-0-0\"]`\n      );\n      if (blockDiv)\n        newHeightMap.set(key, blockDiv.getBoundingClientRect().height);\n    }\n    setHeightMap(newHeightMap);\n  }, [editorState]);\n\n  return (\n    <div className=\"bullets columns is-multiline\">\n      <div\n        className=\"column\"\n        style={\n          {\n            // width: width + 'mm',\n          }\n        }\n      >\n        <h2 className=\"subtitle\">Input Bullets Here:</h2>\n        <div className=\"border\" style={{ width: width + 1 + \"mm\" }}>\n          <Editor\n            editorState={editorState}\n            onChange={onChange}\n            handleKeyCommand={handleKeyCommand}\n            stripPastedStyles={true}\n            spellCheck={true}\n            autoCorrect={\"off\"}\n            enableHighlight={enableHighlight}\n            onHighlightChange={onHighlightChange}\n          />\n        </div>\n      </div>\n      <div className=\"column\">\n        <h2 className=\"subtitle\">View Output Here:</h2>\n        <div\n          className=\"border\"\n          id={bulletOutputID}\n          style={{ width: width + 1 + \"mm\" }}\n          onMouseUp={onBulletSelect}\n          onKeyDown={selectOutput}\n          tabIndex=\"0\"\n        >\n          {Array.from(\n            editorState.getCurrentContent().getBlockMap(),\n            ([key, block]) => {\n              let text = block.getText();\n              if (abbrReplacer) text = abbrReplacer(text);\n\n              return (\n                <Bullet\n                  key={key}\n                  text={text}\n                  widthPx={width * DPMM}\n                  height={heightMap.get(key)}\n                  enableOptim={enableOptim}\n                />\n              );\n            }\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const getSelectionInfo = (editorState) => {\n  // this block of code gets the selected text from the editor.\n  const selectionState = editorState.getSelection();\n  const anchorKey = selectionState.getAnchorKey();\n  const contentBlock = editorState\n    .getCurrentContent()\n    .getBlockForKey(anchorKey);\n  const start = selectionState.getStartOffset();\n  const end = selectionState.getEndOffset();\n  const selectedText = contentBlock.getText().slice(start, end);\n  return {\n    selectionState,\n    anchorKey,\n    contentBlock,\n    start,\n    end,\n    selectedText,\n  };\n};\n\nexport const findWithRegex = (regex, contentBlock, callback) => {\n  const text = contentBlock.getText();\n  let matchArr, start, end;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    end = start + matchArr[0].length;\n    callback(start, end);\n  }\n};\n","import { PureComponent, createRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { Forms } from \"../../const/const.js\";\n\nconst pdfjs = require(\"@ckhordiasma/pdfjs-dist\");\nconst pdfjsWorker = require(\"@ckhordiasma/pdfjs-dist/build/pdf.worker.entry\");\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\n//PDF import\nclass ImportTools extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.fileInputRef = createRef();\n    this.state = {\n      type: \"none\",\n      hovering: false,\n    };\n  }\n\n  importFile = (e) => {\n    if (!this.fileInputRef.current.value) {\n      console.log(\"no file picked\");\n      return;\n    } else {\n      let callback = (file) => {\n        console.log(file);\n      };\n      if (this.state.type === \"PDF\") {\n        callback = this.getDataFromPDF;\n      } else if (this.state.type === \"JSON\") {\n        callback = this.getDataFromJSON;\n      }\n      //return Promise.resolve(this.fileInputRef.current.files[0]).then(callback).then(() => {\n      //    this.fileInputRef.current.value = ''});\n      callback(this.fileInputRef.current.files[0]);\n      this.fileInputRef.current.value = \"\";\n    }\n  };\n  inputClick = (importType) => {\n    return () => {\n      this.setState({\n        type: importType,\n      });\n      this.fileInputRef.current.click();\n    };\n  };\n  getDataFromPDF = (file) => {\n    const { pullBullets, getPageInfo } = getBulletsFromPdf(file);\n    //note: these promises are PDFJS promises, not ES promises\n\n    //was not able to call this (this.props.onTextUpdate) inside the \"then\" scope, so I const'ed them out\n    const textUpdater = this.props.onTextUpdate;\n    const widthUpdater = this.props.onWidthUpdate;\n\n    Promise.all([pullBullets, getPageInfo]).then(([bulletsHTML, pageData]) => {\n      widthUpdater(parseFloat(pageData.width))();\n\n      // This is needed to convert the bullets HTML into normal text. It gets rid of things like &amp;\n      const bullets = new DOMParser().parseFromString(bulletsHTML, \"text/html\")\n        .documentElement.textContent;\n      textUpdater(bullets)();\n    });\n  };\n  getDataFromJSON = (file) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = JSON.parse(e.target.result);\n\n      this.props.onJSONImport(data);\n    };\n    reader.readAsText(file);\n  };\n\n  hoverOut = () => {\n    this.setState({ hovering: false });\n  };\n  toggleMenu = () => {\n    const current = this.state.hovering;\n    this.setState({ hovering: !current });\n  };\n  render() {\n    const menuState = this.state.hovering ? \"is-active\" : \"\";\n    return (\n      <div className={\"dropdown \" + menuState}>\n        <input\n          type=\"file\"\n          onChange={this.importFile}\n          style={{ display: \"none\" }}\n          ref={this.fileInputRef}\n        ></input>\n        <div className=\"dropdown-trigger\">\n          <div className=\"buttons has-addons\">\n            <button className=\"button\" onClick={this.inputClick(\"PDF\")}>\n              Import\n            </button>\n            <button\n              className=\"button\"\n              onClick={this.toggleMenu}\n              aria-haspopup=\"true\"\n              aria-controls=\"import-menu\"\n            >\n              <span className=\"icon\">\n                <FontAwesomeIcon icon={faAngleDown} />\n              </span>\n            </button>\n          </div>\n        </div>\n        <div\n          className=\"dropdown-menu\"\n          id=\"import-menu\"\n          role=\"menu\"\n          onMouseLeave={this.hoverOut}\n        >\n          <div className=\"dropdown-content\">\n            <a\n              href=\"?#\"\n              className=\"dropdown-item\"\n              onClick={this.inputClick(\"PDF\")}\n            >\n              PDF\n            </a>\n            <a\n              href=\"?#\"\n              className=\"dropdown-item\"\n              onClick={this.inputClick(\"JSON\")}\n            >\n              JSON\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n// form width, space optimization, select text\nclass OutputTools extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const widthAWD = 202.321;\n    const widthEPR = 202.321;\n    const widthOPR = 201.041;\n    return (\n      <div className=\"field is-grouped\">\n        {/* if I want to group things together in a field, each subelement must have the control class name */}\n        <div className=\"control field has-addons\">\n          <div className=\"control has-icons-right\">\n            <input\n              className=\"input\"\n              id=\"widthInput\"\n              type=\"number\"\n              min=\"100\"\n              max=\"500\"\n              step=\".001\"\n              value={this.props.width}\n              onChange={this.props.onWidthChange}\n            ></input>\n            <span className=\"icon is-right\">mm</span>\n          </div>\n          <div className=\"control buttons has-addons\">\n            <a\n              className={\n                \"button is-primary \" +\n                (this.props.width === widthAWD ? \"\" : \"is-outlined\")\n              }\n              onClick={this.props.onWidthUpdate(widthAWD)}\n            >\n              AWD\n            </a>\n            <a\n              className={\n                \"button is-success \" +\n                (this.props.width === widthEPR ? \"\" : \"is-outlined\")\n              }\n              onClick={this.props.onWidthUpdate(widthEPR)}\n            >\n              EPR\n            </a>\n            <a\n              className={\n                \"button is-link \" +\n                (this.props.width === widthOPR ? \"\" : \"is-outlined\")\n              }\n              onClick={this.props.onWidthUpdate(widthOPR)}\n            >\n              OPR\n            </a>\n          </div>\n        </div>\n\n        <a\n          className={\n            \"control button is-dark\" +\n            (this.props.enableOptim ? \"\" : \"is-outlined\")\n          }\n          onClick={this.props.onOptimChange}\n          id=\"enableOptim\"\n        >\n          Auto-Space\n        </a>\n        <a\n          className={\n            \"control button is-dark\" +\n            (this.props.enableHighlight ? \"\" : \"is-outlined\")\n          }\n          onClick={() => {this.props.onHighlightChange(); this.props.handleEnableHighlight()}}\n          id=\"enableHighlight\"\n        >\n          Highlight Duplicates\n        </a>\n      </div>\n    );\n  }\n}\n// normalize spaces\nclass InputTools extends PureComponent {\n  render() {\n    return (\n      <button className=\"button\" onClick={this.props.onTextNorm}>\n        Renormalize Input Spacing\n      </button>\n    );\n  }\n}\n// saving settings\nclass SaveTools extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.exportRef = createRef();\n    this.state = { hovering: false };\n  }\n  onSave = () => {\n    const settings = this.props.onSave();\n    //JSON stringifying an array for future growth\n    const storedData = JSON.stringify([settings]);\n    try {\n      localStorage.setItem(\"bullet-settings\", storedData);\n      console.log(\n        \"saved settings/data to local storage with character length \" +\n          storedData.length\n      );\n    } catch (err) {\n      if (err.name === \"SecurityError\") {\n        alert(\n          \"Sorry, saving to cookies does not work using the file:// interface and/or your browser's privacy settings\"\n        );\n      } else {\n        throw err;\n      }\n    }\n  };\n  onExport = () => {\n    const settings = this.props.onSave();\n    //JSON stringifying an array for future growth\n    const storedData = JSON.stringify([settings]);\n    const dataURI =\n      \"data:application/JSON;charset=utf-8,\" + encodeURIComponent(storedData);\n    this.exportRef.current.href = dataURI;\n    this.exportRef.current.click();\n    console.log(\n      \"exported settings/data to JSON file with character length \" +\n        storedData.length\n    );\n  };\n  hoverOut = () => {\n    this.setState({ hovering: false });\n  };\n  toggleMenu = () => {\n    const current = this.state.hovering;\n    this.setState({ hovering: !current });\n  };\n  render() {\n    const menuState = this.state.hovering ? \"is-active\" : \"\";\n    return (\n      <div className={\"dropdown \" + menuState}>\n        <div className=\"dropdown-trigger\">\n          <div className=\"buttons has-addons\">\n            <button className=\"button\" onClick={this.onSave}>\n              Save{\" \"}\n            </button>\n            <button\n              className=\"button\"\n              aria-haspopup=\"true\"\n              aria-controls=\"save-menu\"\n            >\n              <span className=\"icon\" onClick={this.toggleMenu}>\n                <FontAwesomeIcon icon={faAngleDown} />\n              </span>\n            </button>\n          </div>\n        </div>\n        <div\n          className=\"dropdown-menu\"\n          id=\"save-menu\"\n          role=\"menu\"\n          onMouseLeave={this.hoverOut}\n        >\n          <div className=\"dropdown-content\">\n            <a href=\"?#\" className=\"dropdown-item\" onClick={this.onSave}>\n              Cookie\n            </a>\n            <a href=\"?#\" className=\"dropdown-item\" onClick={this.onExport}>\n              JSON\n            </a>\n          </div>\n        </div>\n\n        <a\n          href=\"?#\"\n          style={{ display: \"none\" }}\n          download=\"settings.json\"\n          ref={this.exportRef}\n        ></a>\n      </div>\n    );\n  }\n}\nclass Logo extends PureComponent {\n  render() {\n    return (\n      <h1 className=\"title\">\n        <span className=\"logo\">AF </span>\n        <span className=\"logo\">Bull</span>et\n        <span className=\"logo\"> Sh</span>aping &amp;\n        <span className=\"logo\"> i</span>teration\n        <span className=\"logo\"> t</span>ool\n      </h1>\n    );\n  }\n}\nclass ThesaurusTools extends PureComponent {\n  render() {\n    return (\n      <a\n        className=\"button\"\n        onClick={this.props.onHide}\n        aria-haspopup=\"true\"\n        aria-controls=\"thesaurus-menu\"\n      >\n        <span>Thesaurus</span>\n        <span className=\"icon\">\n          <FontAwesomeIcon icon={faAngleDown} />\n        </span>\n      </a>\n    );\n  }\n}\nclass DocumentTools extends PureComponent {\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-start\">\n          <div className=\"navbar-item\">\n            <SaveTools onSave={this.props.onSave} />\n          </div>\n          <div className=\"navbar-item\">\n            <ImportTools\n              onJSONImport={this.props.onJSONImport}\n              onTextUpdate={this.props.onTextUpdate}\n              onWidthUpdate={this.props.onWidthUpdate}\n            />\n          </div>\n          <div className=\"navbar-item\">\n            <OutputTools\n              enableOptim={this.props.enableOptim}\n              onOptimChange={this.props.onOptimChange}\n              enableHighlight={this.props.enableHighlight}\n              onHighlightChange={this.props.onHighlightChange}\n              handleEnableHighlight={this.props.handleEnableHighlight}\n              width={this.props.width}\n              onWidthChange={this.props.onWidthChange}\n              onWidthUpdate={this.props.onWidthUpdate}\n            />\n          </div>\n          <div className=\"navbar-item\">\n            <InputTools onTextNorm={this.props.onTextNorm} />\n          </div>\n          <div className=\"navbar-item\">\n            <ThesaurusTools onHide={this.props.onThesaurusHide} />\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction getBulletsFromPdf(filedata) {\n  const pdfSetup = filedata.arrayBuffer().then(function (buffer) {\n    const uint8Array = new Uint8Array(buffer);\n\n    return pdfjs.getDocument({ data: uint8Array }).promise;\n  });\n\n  const getXFA = pdfSetup.then(function (pdf) {\n    return pdf.getXFA();\n  });\n\n  const getFormName = pdfSetup.then(function (pdf) {\n    return pdf.getMetadata().then(function (result) {\n      const prefix = result.info.Custom[\"Short Title - Prefix\"];\n      const num = result.info.Custom[\"Short Title - Number\"];\n      return prefix + \"\" + num;\n    });\n  });\n  const getAllData = Promise.all([getFormName, getXFA]);\n  const pullBullets = getAllData.then(function (results) {\n    const formName = results[0];\n    const xfaDict = results[1];\n\n    let datasetXML = xfaDict[\"datasets\"];\n    datasetXML = datasetXML.replace(/&#xD;/g, \"\\n\");\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(datasetXML, \"text/xml\");\n\n    let bulletText = \"\";\n    for (let tagName of Forms.all[formName][\"fields\"]) {\n      const bulletTag = xmlDoc.querySelector(tagName);\n      bulletText += bulletTag.innerHTML + \"\\n\";\n    }\n    return bulletText;\n  });\n\n  const getPageInfo = getAllData.then(function (results) {\n    const formName = results[0];\n    const xfaDict = results[1];\n\n    const templateXML = xfaDict[\"template\"];\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(templateXML, \"text/xml\");\n\n    let fonts = [];\n    let fontSizes = [];\n    let widths = [];\n    let i = 0;\n    for (let tagName of Forms.all[formName][\"fields\"]) {\n      const bulletTag = xmlDoc.querySelector(\"field[name='\" + tagName + \"'\");\n      fonts[i] = bulletTag.querySelector(\"font\").getAttribute(\"typeface\");\n      fontSizes[i] = bulletTag.querySelector(\"font\").getAttribute(\"size\");\n      widths[i] = bulletTag.getAttribute(\"w\");\n      i += 1;\n    }\n    for (let font of fonts) {\n      if (font !== fonts[0]) {\n        console.log(\n          \"warning: not all grabbed sections have the same font type\"\n        );\n        break;\n      }\n    }\n    for (let fontSize of fontSizes) {\n      if (fontSize !== fontSizes[0]) {\n        console.log(\n          \"warning: not all grabbed sections have the same font size\"\n        );\n        break;\n      }\n    }\n    for (let width of widths) {\n      if (width !== widths[0]) {\n        console.log(\"warning: not all grabbed sections have the same width\");\n        break;\n      }\n    }\n\n    return { font: fonts[0], fontSize: fontSizes[0], width: widths[0] };\n\n    //accomplishmentsTag = templateXML.match(/name=\"specificAccomplishments\"(.*?)<\\/field/);\n    //console.log(accomplishmentsTag)\n  });\n  return { pullBullets, getPageInfo };\n}\n\nexport { Logo, DocumentTools };\n","export default __webpack_public_path__ + \"static/media/abbrs.ebd0e99b.xlsx\";","import { useRef } from \"react\";\nimport { HotTable } from \"@handsontable/react\";\nimport \"handsontable/dist/handsontable.full.css\";\n\nconst tableSettings = {\n  columns: [\n    {\n      data: \"enabled\",\n      type: \"checkbox\",\n      disableVisualSelection: true,\n      width: 20,\n    },\n    {\n      data: \"value\",\n      type: \"text\",\n    },\n    {\n      data: \"abbr\",\n      type: \"text\",\n    },\n  ],\n  stretchH: \"all\",\n  width: 500,\n  autoWrapRow: true,\n  height: 500,\n  maxRows: Infinity,\n  manualRowResize: true,\n  manualColumnResize: true,\n  rowHeaders: true,\n  colHeaders: [\"Enabled\", \"Word\", \"Abbreviation\"],\n  trimWhitespace: false,\n  enterBeginsEditing: false,\n  manualRowMove: true,\n  manualColumnMove: true,\n  columnSorting: {\n    indicator: true,\n  },\n  autoColumnSize: false,\n  minRows: 15,\n  contextMenu: true,\n  licenseKey: \"non-commercial-and-evaluation\",\n};\n\nfunction AbbreviationTable({ data, setData }) {\n  const tableRef = useRef(null);\n\n  const update = (payload, source) => {\n    //console.log({source, payload, tableRef: tableRef.current , data})\n    // console.log(\"update source: \", source);\n    if (source !== \"loadData\" && tableRef.current !== null) {\n      const rawData = tableRef.current.hotInstance.getData();\n      const newData = rawData.map((row) => {\n        return {\n          enabled: row[0],\n          value: row[1],\n          abbr: row[2],\n        };\n      });\n\n      setData(newData);\n    }\n  };\n\n  return (\n    <HotTable\n      {...tableSettings}\n      data={data}\n      ref={tableRef}\n      afterChange={update}\n    />\n  );\n}\n\nexport default AbbreviationTable;\n","import { createRef } from \"react\";\nimport XLSX from \"xlsx\";\nimport SampleAbbrFile from \"../../static/abbrs.xlsx\";\nimport AbbreviationTable from \"./AbbreviationTable.js\";\n\nexport const importSampleAbbrs = (callback) => {\n  return new Promise((res) => {\n    const xhttp = new XMLHttpRequest();\n    xhttp.responseType = \"blob\";\n    xhttp.onload = () => {\n      res(xhttp.response);\n    };\n    xhttp.open(\"GET\", SampleAbbrFile, true);\n    xhttp.send();\n  }).then(callback);\n};\n\nexport const getDataFromXLS = (file, callback) => {\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    const data = e.target.result;\n    const workbook = XLSX.read(data, {\n      type: \"binary\",\n      raw: true,\n    });\n    const rows = XLSX.utils\n      .sheet_to_json(workbook.Sheets[workbook.SheetNames[0]], {\n        header: [\"enabled\", \"value\", \"abbr\"],\n      })\n      .map(({ enabled, value, abbr }) => {\n        return { enabled, value, abbr };\n      });\n\n    // checks first row, enabled value and see if it matches header text\n    // normally enabled is a boolean.\n    if (rows[0].enabled.toString().match(/enabled/i)) {\n      callback(rows.slice(1));\n    } else {\n      callback(rows);\n    }\n  };\n  reader.readAsBinaryString(file);\n};\n\nexport const exportToXLS = (data) => {\n  const wb = XLSX.utils.book_new();\n  const sht = XLSX.utils.json_to_sheet(data);\n  XLSX.utils.book_append_sheet(wb, sht, \"abbrs\");\n  XLSX.writeFile(wb, \"abbrs.xlsx\");\n};\n\nfunction AbbrToolbar({ data, setData, ...props }) {\n  const fileInputRef = createRef();\n\n  function importAbbrs(e) {\n    if (!fileInputRef.current.value) {\n      console.log(\"no file picked\");\n      return;\n    } else {\n      getDataFromXLS(fileInputRef.current.files[0], setData);\n      fileInputRef.current.value = \"\";\n    }\n  }\n\n  return (\n    <div className=\"toolbox\">\n      <input\n        type=\"file\"\n        onChange={importAbbrs}\n        ref={fileInputRef}\n        style={{ display: \"none\" }}\n      ></input>\n      <button className=\"button\" onClick={() => fileInputRef.current.click()}>\n        Import Abbrs\n      </button>\n      <button className=\"button\" onClick={() => exportToXLS(data)}>\n        Export Abbrs\n      </button>\n      <button\n        className=\"button\"\n        onClick={() => {\n          if (\n            window.confirm(\n              \"Are you sure you want to remove all existing acronyms and replace with a common list?\"\n            )\n          ) {\n            importSampleAbbrs((file) => getDataFromXLS(file, setData));\n          }\n        }}\n      >\n        Load Common Abbrs\n      </button>\n    </div>\n  );\n}\n\nfunction AbbreviationViewer({ data, setData }) {\n  return (\n    <div>\n      <AbbrToolbar setData={setData} data={data} />\n      <AbbreviationTable data={data} setData={setData} />\n    </div>\n  );\n}\n\nexport default AbbreviationViewer;\n","import { PureComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nconst handleCardClick = (word, This) => {\n  return (e) => {\n    e.preventDefault();\n    This.props.onSelReplace(word);\n  };\n};\n\nclass SynonymViewer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      synonyms: [],\n      hidden: true,\n    };\n  }\n  getSynonyms = (phrase) => {\n    const xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = () => {\n      if (xhttp.readyState === 4 && xhttp.status === 200) {\n        const dat = JSON.parse(xhttp.responseText);\n\n        if (dat.length !== 0) {\n          this.setState({\n            synonyms: dat.map((item) => {\n              return item.word;\n            }),\n          });\n        } else {\n          this.setState({\n            synonyms: [],\n          });\n        }\n      }\n    };\n    const maxWords = 75;\n    xhttp.open(\n      \"GET\",\n      \"https://api.datamuse.com/words?max=\" + maxWords + \"&ml=\" + phrase,\n      true\n    );\n    xhttp.send();\n  };\n  componentDidMount() {\n    this.getSynonyms(this.props.word);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.word !== this.props.word) {\n      this.getSynonyms(this.props.word);\n    }\n  }\n\n  render() {\n    const replacedWord = this.props.abbrReplacer(this.props.word);\n    const otherAbbrs = this.props.abbrDict[this.props.word];\n    const header = (\n      <span className=\"tag is-medium\">\n        <Synonym\n          word={this.props.word}\n          key={this.props.word}\n          abbr={replacedWord === this.props.word ? \"\" : replacedWord}\n          otherAbbrs={otherAbbrs}\n        />\n        <a\n          className=\"icon is-small\"\n          onMouseDown={handleCardClick(this.props.word, this)}\n        >\n          <FontAwesomeIcon icon={faPlus} size=\"xs\" color=\"#51cf66\" />\n        </a>\n      </span>\n    );\n\n    const synonyms = (\n      <SynonymList\n        onSelReplace={this.props.onSelReplace}\n        key={this.state.synonyms.join(\"\")}\n        synonyms={this.state.synonyms}\n        abbrDict={this.props.abbrDict}\n        abbrReplacer={this.props.abbrReplacer}\n      />\n    );\n    const explanation = (\n      <span className=\"panel-block\" key=\"init\">\n        Auto-thesaurus box - highlight a word or phrase below to show synonyms\n        in this box\n      </span>\n    );\n    const noResults = (\n      <span className=\"panel-block\" key=\"none\">\n        no results found\n      </span>\n    );\n    let mainBody;\n    if (this.props.word === \"\") {\n      mainBody = explanation;\n    } else if (this.state.synonyms.length === 0) {\n      mainBody = noResults;\n    } else {\n      mainBody = synonyms;\n    }\n\n    return (\n      <div className=\"card\">\n        <header className=\"card-header has-background-light\tis-shadowless\">\n          <div className=\"card-header-title\">\n            <span>Thesaurus{this.props.word ? \":\" : \"\"}</span>\n            {this.props.word ? header : \"\"}\n          </div>\n          <a className=\"card-header-icon\" onClick={this.props.onHide}>\n            <span className=\"delete\"></span>\n          </a>\n        </header>\n        <div\n          className=\"card-content\"\n          style={{ height: \"290px\", overflow: \"auto\" }}\n        >\n          {mainBody}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass SynonymList extends PureComponent {\n  handleCardClick = (word) => {\n    return (e) => {\n      e.preventDefault();\n      this.props.onSelReplace(word);\n    };\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"tags are-medium \">\n          {this.props.synonyms.map((word, i) => {\n            const replacedWord = this.props.abbrReplacer(word);\n            const otherAbbrs = this.props.abbrDict[word];\n            return (\n              <span className=\"tag\" key={i}>\n                <Synonym\n                  word={word}\n                  abbr={replacedWord === word ? \"\" : replacedWord}\n                  otherAbbrs={otherAbbrs}\n                />\n                <a className=\"icon\" onMouseDown={handleCardClick(word, this)}>\n                  <FontAwesomeIcon icon={faPlus} size=\"xs\" color=\"#51cf66\" />\n                </a>\n              </span>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nclass Synonym extends PureComponent {\n  render() {\n    //don't forget! you need to add capability to check on disabled abbreviations\n    let mainAbbrDisp = \"\";\n    if (this.props.abbr) {\n      mainAbbrDisp = (\n        <span style={{ fontWeight: \"bold\" }}>\n          {\" (\" + this.props.abbr + \")\"}\n        </span>\n      );\n    }\n\n    let enabledAbbrDisp = \"\";\n    let disabledAbbrDisp = \"\";\n\n    if (this.props.otherAbbrs) {\n      if (this.props.otherAbbrs.enabled) {\n        let enabledAbbrs = this.props.otherAbbrs.enabled.filter((abbr) => {\n          return abbr !== this.props.abbr;\n        });\n        if (enabledAbbrs.length > 0) {\n          enabledAbbrDisp = (\n            <span style={{ fontStyle: \"italic\" }}>\n              {\" (\" + enabledAbbrs.join(\",\") + \")\"}\n            </span>\n          );\n        }\n      }\n\n      if (this.props.otherAbbrs.disabled) {\n        let disabledAbbrs = this.props.otherAbbrs.disabled;\n        if (disabledAbbrs.length > 0) {\n          disabledAbbrDisp = (\n            <span style={{ fontStyle: \"italic\" }}>\n              {\" (\" + disabledAbbrs.join(\",\") + \")\"}\n            </span>\n          );\n        }\n      }\n    }\n    return (\n      <span>\n        <span>{this.props.word}</span>\n        {mainAbbrDisp}\n        {enabledAbbrDisp}\n        {disabledAbbrDisp}\n      </span>\n    );\n  }\n}\nexport default SynonymViewer;\n","export const defaultText =\n  \"- This is a custom built bullet writing tool; abbreviations will be replaced according to table in the abbreviations tab--you will see output on the right\\n\\\n- This tool can optimize spacing; output will be red if the optimizer could not fix spacing with 2004 or 2006 Unicode spaces\\n\\\n- Click the thesaurus button to show one; select a word in this or the output box to view synonyms--words in parentheses are abbreviations that are configured\";\n\nexport const defaultWidth = 202.321;\nexport const defaultAbbrData = [\n  {\n    enabled: true,\n    value: \"abbreviations\",\n    abbr: \"abbrs\",\n  },\n  {\n    enabled: true,\n    value: \"table\",\n    abbr: \"tbl\",\n  },\n  {\n    enabled: true,\n    value: \"optimize\",\n    abbr: \"optim\",\n  },\n  {\n    enabled: true,\n    value: \"with \",\n    abbr: \"w/\",\n  },\n  {\n    enabled: true,\n    value: \"parentheses\",\n    abbr: \"parens\",\n  },\n];\n","import { useState, useEffect, useCallback } from \"react\";\nimport BulletComparator, {\n  getSelectionInfo,\n  findWithRegex,\n} from \"./components/Bullets/BulletComparator\";\nimport { Logo, DocumentTools } from \"./components/Toolbars/Toolbars\";\nimport { tokenize } from \"./components/Bullets/utils\";\nimport AbbreviationViewer from \"./components/Abbreviation/AbbreviationViewer\";\nimport SynonymViewer from \"./components/Toolbars/Thesaurus.js\";\nimport { EditorState, ContentState, Modifier, SelectionState, CompositeDecorator } from \"draft-js\";\nimport { defaultAbbrData, defaultText, defaultWidth } from \"./const/defaults\";\n\nconst defaultEditorState = EditorState.createWithContent(\n  ContentState.createFromText(defaultText)\n);\n\n// Note that all width measurements in this file are in millimeters.\nfunction BulletApp({enableHighlight, onHighlightChange}) {\n  const [enableOptim, setEnableOptim] = useState(true);\n  const [width, setWidth] = useState(defaultWidth);\n  const [abbrData, setAbbrData] = useState(defaultAbbrData);\n\n  const [abbrDict, setAbbrDict] = useState({});\n\n  const [selection, setSelection] = useState(\"\");\n  const [currentTab, setCurrentTab] = useState(0);\n  const [showThesaurus, setShowThesaurus] = useState(false);\n  const [editorState, setEditorState] = useState(defaultEditorState);\n\n  function handleJSONImport(settingsArray) {\n    const settings = settingsArray[0]; //preparing for possible eventual several tabs of stuff\n    setEnableOptim(settings.enableOptim ?? enableOptim);\n\n    // for backwards compatibility\n    setWidth(parseFloat(settings.width ?? width));\n\n    // for backwards compatibility\n    if (Array.isArray(settings.abbrData[0])) {\n      setAbbrData(\n        settings.abbrData.map((row) => {\n          return {\n            enabled: row[0],\n            value: row[1],\n            abbr: row[2],\n          };\n        })\n      );\n    } else {\n      setAbbrData(settings.abbrData ?? abbrData);\n    }\n\n    setEditorState(\n      settings.editorState\n        ? EditorState.fromJS(settings.editorState)\n        : EditorState.createWithContent(\n            ContentState.createFromText(settings.text)\n          )\n    );\n  }\n\n  useEffect(() => {\n    let settingsArray;\n    try {\n      if (localStorage.getItem(\"bullet-settings\")) {\n        settingsArray = JSON.parse(localStorage.getItem(\"bullet-settings\"));\n        handleJSONImport(settingsArray);\n      }\n    } catch (err) {\n      if (err.name === \"SecurityError\") {\n        console.log(\n          \"Was not able to get localstorage bullets due to use of file interface and browser privacy settings\"\n        );\n      } else {\n        throw err;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const newAbbrDict = {};\n\n    abbrData\n      .filter((row) => row.value !== null && row.abbr !== null)\n      .forEach((row) => {\n        //console.log(row);\n        let fullWord = String(row.value).replace(/\\s/g, \" \");\n        let abbr = row.abbr;\n        let enabled = row.enabled;\n        newAbbrDict[fullWord] = newAbbrDict[fullWord] || []; //initializes to empty array if necessary\n\n        if (enabled) {\n          newAbbrDict[fullWord].enabled = newAbbrDict[fullWord].enabled || [];\n          newAbbrDict[fullWord].enabled.push(abbr);\n        } else {\n          newAbbrDict[fullWord].disabled = newAbbrDict[fullWord].disabled || [];\n          newAbbrDict[fullWord].disabled.push(abbr);\n        }\n      });\n\n    setAbbrDict(newAbbrDict);\n  }, [abbrData]);\n\n  \n\n  const abbrReplacer = useCallback(\n    (sentence) => {\n      const finalAbbrDict = {};\n      //console.log(abbrDict);\n      Object.keys(abbrDict).forEach((word) => {\n        const abbrs = abbrDict[word]; //an array\n        //if there is at least one enabled abbreviation, take the lowest most element of it.\n        if (abbrs.enabled) {\n          finalAbbrDict[word] = abbrs.enabled[abbrs.enabled.length - 1];\n        }\n      });\n\n      // courtesy of https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n      function escapeRegExp(string) {\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n      }\n\n      let modifiers = \"g\";\n      const allApprovedAbbrs = Object.keys(finalAbbrDict)\n        .map(escapeRegExp)\n        .join(\"|\");\n\n      // some info on the boundary parts of the regex:\n      // (^|\\\\W|\\\\b)\n      //     ^ - ensures words at the beginning of line are considered for abbreviation\n      //     \\\\W - expects abbr to be preceded by a non-word, i.e. a space, semicolon, dash, etc.\n      //     \\\\b - also check for word boundaries, this is necessary for edge cases like 'f/ ' and 'w/ '.\n      //            Otherwise things like 'with chicken' and 'for $2M' won't resolve to 'w/chicken' and 'f/$2M'.\n      // (\\\\W|\\\\b|$)\n      //     \\\\W, \\\\b - see above\n      //     $ - ensures words at end of line are considered for abbreviation\n      const regExp = new RegExp(\n        \"(^|\\\\W|\\\\b)(\" + allApprovedAbbrs + \")(\\\\W|\\\\b|$)\",\n        modifiers\n      );\n      const newSentence = sentence.replace(regExp, (match, p1, p2, p3) => {\n        //p2 = p2.replace(/ /g,'\\\\s')\n        let abbr = finalAbbrDict[p2];\n        if (!abbr) {\n          abbr = \"\";\n        }\n        return p1 + abbr + p3;\n      });\n      return newSentence;\n    },\n    [abbrDict]\n  );\n\n  function handleOptimChange() {\n    setEnableOptim(!enableOptim);\n  }\n\n  function handleEnableHighlight() {\n    // console.log(\"handleEnableHighlight fired\");\n    // console.log(enableHighlight);\n    const contentState = editorState.getCurrentContent();\n    if (enableHighlight === false) {\n      let bulletText = contentState.getPlainText();\n      let userInput = bulletText.split(/\\s|;|--|\\//);\n      let findDuplicates = userInput => userInput.filter((item, index) => (userInput.indexOf(item) !== index && item.length > 1));\n      let duplicates = findDuplicates(userInput);\n      duplicates = [...new Set(duplicates)];\n\n      function handleHighlightClick(e) {\n        let yellowSpans = document.getElementsByClassName('yellow-highlight');\n        // console.log(yellowSpans);\n        // console.log(e.target);\n        for (let span of yellowSpans) {\n          if (e.target.innerText == span.outerText) {\n            if (span.style.background == 'yellow') {\n              span.style.background = 'LawnGreen';\n            } else {\n              span.style.background = 'yellow';\n            }\n          }\n        }\n      }\n\n      const Decorated = ( {children} ) => {\n        return <span className={\"yellow-highlight\"} onClick={handleHighlightClick} style={{ background: \"yellow\", cursor: \"pointer\" }}>{children}</span>;\n      };\n\n      function findWithRegex(duplicates, contentBlock, callback) {\n        const text = contentBlock.getText();\n      \n        duplicates.forEach(word => {\n          const matches = [...text.matchAll(word)];\n          matches.forEach(match =>\n            callback(match.index, match.index + match[0].length)\n          );\n        });\n      }\n\n      function handleStrategy(contentBlock, callback) {\n        findWithRegex(duplicates, contentBlock, callback);\n      }\n\n      const createDecorator = () =>\n        new CompositeDecorator([\n          {\n            strategy: handleStrategy,\n            component: Decorated\n          }\n        ]);\n      setEditorState(EditorState.set(editorState, {decorator: createDecorator()}));\n    } else {\n      setEditorState(EditorState.set(editorState, {decorator: null}));\n    }\n  }\n\n\n  function handleSelect(newSel) {\n    // console.log(newSel + \" \" + enableHighlight);\n    const maxWords = 8;\n    if (newSel.trim() !== \"\") {\n      setSelection(tokenize(newSel.trim()).slice(0, maxWords).join(\" \"));\n    }\n  }\n\n  function handleWidthChange(e) {\n    setWidth(parseFloat(e.target.value));\n  }\n  function handleTextNorm() {\n    const selectionsToReplace = [];\n    const contentState = editorState.getCurrentContent();\n    contentState.getBlockMap().forEach((block, key) => {\n      findWithRegex(/\\s+/g, block, (anchorOffset, focusOffset) => {\n        const selection = SelectionState.createEmpty(key).merge({\n          anchorOffset,\n          focusOffset,\n        });\n        selectionsToReplace.push(selection);\n      });\n    });\n\n    let newContentState = contentState;\n    // need to reverse the selections list, because otherwise as the newContentState is iteratively changed,\n    //  subsequent selections will get shifted and get all jacked up. This problem can be avoided by going backwards.\n    selectionsToReplace.reverse().forEach((selection) => {\n      newContentState = Modifier.replaceText(newContentState, selection, \" \");\n    });\n\n    setEditorState(EditorState.createWithContent(newContentState));\n  }\n  function handleTextUpdate(newText) {\n    return () =>\n      setEditorState(\n        EditorState.createWithContent(ContentState.createFromText(newText))\n      );\n  }\n  function handleWidthUpdate(newWidth) {\n    return () => setWidth(newWidth);\n  }\n  function handleSave() {\n    return {\n      width: width,\n      text: editorState.getCurrentContent().getPlainText(\"\\n\"),\n      editorState: editorState.toJS(),\n      abbrData: abbrData,\n      enableOptim: enableOptim,\n    };\n  }\n  function handleTabChange(newTab) {\n    return () => setCurrentTab(newTab);\n  }\n  function handleThesaurusHide() {\n    setShowThesaurus(!showThesaurus);\n  }\n  function handleSelReplace(word) {\n    if (document.activeElement.className.match(/public-DraftEditor-content/)) {\n      const {\n        selectedText,\n        start,\n        anchorKey,\n        selectionState,\n      } = getSelectionInfo(editorState);\n\n      const trailingSpaces = selectedText.match(/\\s*$/)[0];\n      const newEnd = start + word.length + trailingSpaces.length;\n\n      const newSelectionState = SelectionState.createEmpty(anchorKey).merge({\n        anchorOffset: start,\n        focusOffset: newEnd,\n      });\n\n      const newContent = Modifier.replaceText(\n        editorState.getCurrentContent(),\n        selectionState,\n        word + trailingSpaces\n      );\n      const newEditorState = EditorState.push(\n        editorState,\n        newContent,\n        \"insert-characters\"\n      );\n      const newEditorStateSelect = EditorState.forceSelection(\n        newEditorState,\n        newSelectionState\n      );\n\n      setEditorState(newEditorStateSelect);\n      const contentState = newEditorStateSelect.getCurrentContent();\n      // console.log(enableHighlight);\n      if (enableHighlight === true) {\n        let bulletText = contentState.getPlainText();\n        let userInput = bulletText.split(/\\s|;|--|\\//);\n        let findDuplicates = userInput => userInput.filter((item, index) => (userInput.indexOf(item) !== index && item.length > 1));\n        let duplicates = findDuplicates(userInput);\n        duplicates = [...new Set(duplicates)];\n      \n        function handleHighlightClick(e) {\n          let yellowSpans = document.getElementsByClassName('yellow-highlight');\n          // console.log(yellowSpans);\n          // console.log(e.target);\n          for (let span of yellowSpans) {\n            if (e.target.innerText == span.outerText) {\n              if (span.style.background == 'yellow') {\n                span.style.background = 'LawnGreen';\n              } else {\n                span.style.background = 'yellow';\n              }\n            }\n          }\n        }\n  \n        const Decorated = ( {children} ) => {\n          return <span className={\"yellow-highlight\"} onClick={handleHighlightClick} style={{ background: \"yellow\", cursor: \"pointer\" }}>{children}</span>;\n        };\n  \n        function findWithRegex(duplicates, contentBlock, callback) {\n          const text = contentBlock.getText();\n        \n          duplicates.forEach(word => {\n            const matches = [...text.matchAll(word)];\n            matches.forEach(match =>\n              callback(match.index, match.index + match[0].length)\n            );\n          });\n        }\n  \n        function handleStrategy(contentBlock, callback) {\n          findWithRegex(duplicates, contentBlock, callback);\n        }\n  \n        const createDecorator = () =>\n          new CompositeDecorator([\n            {\n              strategy: handleStrategy,\n              component: Decorated\n            }\n          ]);\n  \n          setEditorState(EditorState.set(newEditorStateSelect, {decorator: createDecorator()}));\n          \n        } else {\n\n          setEditorState(EditorState.set(newEditorStateSelect, {decorator: null})); \n        }\n    }\n    \n  }\n\n  const tabs = [\"Bullets\", \"Abbreviations\"];\n  const tabContents = [\n    <BulletComparator\n      editorState={editorState}\n      setEditorState={setEditorState}\n      abbrReplacer={abbrReplacer}\n      width={width}\n      onSelect={handleSelect}\n      enableOptim={enableOptim}\n      enableHighlight={enableHighlight}\n      onHighlightChange={onHighlightChange}\n      handleEnableHighlight={handleEnableHighlight}\n    />,\n    <AbbreviationViewer data={abbrData} setData={setAbbrData} />,\n  ];\n\n  return (\n    <div className=\"container is-fluid\">\n      <div className=\"columns is-multiline\">\n        <div className=\"column is-full\">\n          <Logo />\n          <DocumentTools\n            enableOptim={enableOptim}\n            enableHighlight={enableHighlight}\n            onOptimChange={handleOptimChange}\n            onHighlightChange={onHighlightChange}\n            handleEnableHighlight={handleEnableHighlight}\n            width={width}\n            onWidthChange={handleWidthChange}\n            onWidthUpdate={handleWidthUpdate}\n            onTextNorm={handleTextNorm}\n            onTextUpdate={handleTextUpdate}\n            onSave={handleSave}\n            onJSONImport={handleJSONImport}\n            onThesaurusHide={handleThesaurusHide}\n          />\n        </div>\n\n        <div className={\"column is-full \" + (showThesaurus ? \"\" : \"is-hidden\")}>\n          <SynonymViewer\n            word={selection}\n            onSelReplace={handleSelReplace}\n            abbrDict={abbrDict}\n            abbrReplacer={abbrReplacer}\n            onHide={handleThesaurusHide}\n          />\n        </div>\n        <div className=\"column is-full\">\n          <div className=\"tabs\">\n            <ul>\n              {tabs.map((tab, i) => {\n                return (\n                  <li key={i} className={currentTab === i ? \"is-active\" : \"\"}>\n                    <a onClick={handleTabChange(i)}>{tab}</a>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n        <div className=\"column is-full\">{tabContents[currentTab]}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default BulletApp;\n","\nimport { useState } from \"react\";\nimport BulletApp from \"./BulletApp\";\n\nexport default function TopBulletApp() {\n    const [enableHighlight, setEnableHighlight] = useState(false);\n    function handleEnableHighlight() {\n        setEnableHighlight(!enableHighlight);\n        console.log(\"enableHighlight state changed\")\n    }\n    return <BulletApp enableHighlight={enableHighlight} onHighlightChange={handleEnableHighlight}/>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\n//import {Bullet, BulletComparator, Skeleton} from \"./components/bullets.js\"\nimport TopBulletApp from \"./highlightStateHolder.js\";\n\nimport \"./styles/index.scss\"\nimport 'handsontable/dist/handsontable.full.css'\n\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\n\n\nWebFont.load({\n  custom: {\n    families: ['AdobeTimes']\n  }\n});\n\n\n\n\nReactDOM.render(\n  <>\n    <div className=\"section\" id=\"stuff\" >\n      <TopBulletApp  />\n    </div>\n    <div className=\"container\" id=\"footer\">\n      <div>If you have feedback, submit\n          an <a href='https://github.com/AF-VCD/pdf-bullets/issues'>issue</a>\n          or a <a href=\"https://github.com/AF-VCD/pdf-bullets/pulls\">pull request</a>\n      </div>\n      <div>This site utilizes PDF.JS (pdf import), react-table (spreadsheet), draft-js (editor), the DataMuse API (thesaurus), and Bulma (CSS).</div>\n      <div>This site has basic analytics to track the total number of visits to the page. See <a href=\"https://github.com/ckhordiasma/log-bullet-visitors\">here</a> for details</div>\n      <div>Maintained by Christopher Kodama </div>\n    </div>\n  </>\n  , document.getElementById('root'));\n\nincrementVisitors();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\nfunction incrementVisitors() {\n  // code for incrementing visitor count    \n  const xh = new XMLHttpRequest();\n  xh.onreadystatechange = () => {\n    if (xh.readyState === XMLHttpRequest.DONE) {\n      var status = xh.status;\n\n      // Not sure what status codes are acceptable.. using MDN successful responses and redirects range as a guide\n      if ((status >= 200 && status < 400)) {\n        // The request has been completed successfully\n        const count = JSON.parse(xh.response).Count;\n        console.log(\"The bullets site(s) have been visited \" + count + \" times in the last 7 days.\");\n\n      } else {\n        console.log(\"Visitor count increment: task failed successfully\");\n      }\n    }\n  }\n  xh.open(\"POST\", \"https://g5z50elklh.execute-api.us-east-2.amazonaws.com/default/LogVisitors\", true);\n  xh.send();\n}"],"sourceRoot":""}